{
  "id": "createOOBRequest-b-TravelLodgingDetails",
  "endPoints": [
    {
      "name": "getLodging",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + ('SELECT workdayID as id, Destination, name AS descriptor FROM outOfBed_sykqld_destinations ORDER BY createdMoment DESC').urlEncode() %>",
      "authType": "sso"
    },
    {
      "name": "getCountrySearch",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + ('SELECT workdayID, countryName AS descriptor, alpha_3Code AS id FROM countries WHERE countryName CONTAINS \"' + instanceListQuery.replace('+',' ') + '\"').urlEncode() %>",
      "authType": "wcpisu",
      "exclude": "<% empty instanceListQuery %>",
      "deferred": true
    },
    {
      "name": "getCitiesSearch",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + ('SELECT workdayID, travelCity, travelCityName as descriptor, inactive FROM travelCities WHERE inactive = false AND travelCityName CONTAINS \"' + instanceListQuery.replace('+',' ') + '\" ORDER BY travelCityName ASC, country ASC').urlEncode() %>",
      "authType": "wcpisu",
      "exclude": "<% empty instanceListQuery %>",
      "deferred": true
    },
    {
      "name": "getCountriesSearch",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + ('SELECT country FROM countries WHERE countryName contains \\''+ instanceListQuery +'\\'').urlEncode() %>",
      "authType": "wcpisu",
      "deferred": true,
      "exclude": "<% empty instanceListQuery %>"
    },
    {
      "name": "getStates",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + OOB.getStates() %>",
      "authType": "sso"
    }
  ],
  "outboundData": {
    "outboundEndPoints": [
      {
        "_generationNote": "Creates a single instance, as specified by of the OOBProfile business object resource.",
        "name": "createDestinations",
        "url": "<% `https://api.workday.com/apps/outOfBed_sykqld/v1/destinations?bulk=true` %>",
        "authType": "sso",
        "httpMethod": "POST",
        "_onSend": "<% %>",
        "failOnStatusCodes": [{"code":400},{"code":403}]
      },
      {
        "_generationNote": "Creates a single instance, as specified by of the OOBProfile business object resource.",
        "name": "updateAccompanyingTravellers",
        "url": "<% `https://api.workday.com/apps/outOfBed_sykqld/v1/accompanyingTravellers?bulk=true` %>",
        "authType": "sso",
        "httpMethod": "PATCH",
        "_onSend": "<%console.info('update accompany Travellers' + json:asJSON(self.data)) %>",
        "failOnStatusCodes": [{"code":400},{"code":403}]
      },
      {
        "_generationNote": "Creates a single instance, as specified by of the OOBProfile business object resource.",
        "name": "mapAccompanyingTravellers",
        "url": "<% `https://api.workday.com/apps/outOfBed_sykqld/v1/accompanyingTravellers?bulk=true` %>",
        "authType": "sso",
        "httpMethod": "PATCH",
        "failOnStatusCodes": [{"code":400},{"code":403}],
        "onSend": "<%
          var updateList = [];
          var updateMap = {:};
          var destinationList = createDestinations.data.map(x=> {{'id' : x.body.id}});
          var accTravellerList = updateAccompanyingTravellers.data.map(x=> {{'id' : x.body.id}});

          console.info('createDestinations.data' + json:asJSON(createDestinations.data));
          console.info('updateAccompanyingTravellers.data' + json:asJSON(updateAccompanyingTravellers.data));
          console.info('destinationList = ' + destinationList);
          console.info('accTravellerList = ' + accTravellerList);

          var counter = 0;
        for(var x : accTravellerList){
          updateList.add({'id' : x.id, 'lodging':destinationList[counter]});
            counter += 1;
        }
          updateMap.add('data', updateList);
        console.info('map = ' + json:asJSON(updateMap));
                   %>"
      },
      {
        "name": "transitionOutboundVars",
        "type": "outboundVariable",
        "variableScope": "flow",
        "values": [
          {
            "outboundPath": "saveForLater",
            "value": "<% !empty(saveForLaterBtn.value) %>"
          },
          {
            "outboundPath": "proceed",
            "value": "<% !empty(nextBtn.value) %>"
          }
        ]
      }
    ]
  },
  "include": [
    "OOB.script",
    "Dates.script"
  ],
  "script": "<%
    var toggleWidgetVisible = function(toggle) {
       for (var widget : air.childrenMap) {
           if(widget.getlabel().contains('air'))
               empty(widget.setVisible(toggle));
       }
    }

    var toggleWidgetRequired = function(toggle, widgetsMap) {
        console.info('widgetsMap' + json:asJSON(widgetsMap));
        widgetsMap.setVisible(toggle);
        for (var widget : widgetsMap.childrenMap) {
            widget.setRequired(toggle);
            widget.setVisible(toggle);
        }
    }

    var toggleWidgets = function(widgetsMap, id) {
      if(widgetsMap.childrenMap){
        for (var widget : widgetsMap.childrenMap) {
          if(!empty(widget.childrenMap) &&  !empty(widget.title) && widget.title.lowerCase().contains(id) ){
            widget.setVisible(true);
            for (var subwidget : widget.childrenMap) {
              empty(subwidget.children) ? subwidget.setVisible(true) : '';
              empty(subwidget.children) ? subwidget.setRequired(true) : '';
              empty(subwidget.children) ? subwidget.setEnabled(true) : '';
            }
          }else if(!empty(widget.childrenMap) && !empty(widget.title) && !widget.title.lowerCase().contains(id) ){
            widget.setVisible(false);
            for (var subwidget : widget.childrenMap) {
              empty(subwidget.children) ? subwidget.setVisible(false) : '';
              empty(subwidget.children) ? subwidget.setRequired(false) : '';
              empty(subwidget.children) ? subwidget.setEnabled(false) : '';
            }
          }
        }
      }
    }

  var mapData = function(widgetsMap, indexPos){
      console.info('widgetsMap for index ' + indexPos + ' = ' + json:asJSON(widgetsMap) );
      if(!empty(widgetsMap.childrenMap)){
          for (var widget : widgetsMap.childrenMap) {
              console.info('widget for index ' + indexPos + ' = ' + json:asJSON(widget) );
              if(!empty(widget.childrenMap) &&  !empty(widget.title) && widget.title.lowerCase().contains('air') ){
                  widget.setVisible(true);
                      for (var subwidget : widget.childrenMap) {
                          console.info('subwidget for index ' + indexPos + ' = ' + json:asJSON(subwidget) );
                      }
              }else if(!empty(widget.childrenMap) && !empty(widget.title) && !widget.title.lowerCase().contains('air') ){


              }
          }
      }
      //pageVariables.mapOfTravelData[indexPos].add({'travelDetails': indexPos});
      console.info('pageVariables.mapOfTravelData = ' + pageVariables.mapOfTravelData );
  }

    var getTravelPayload = function(quest){
        var travelDetailMap = {:};
        travelDetailMap.add('id', quest.getChildren()[0].value);
        var questionBody = quest.getChildren()[1].value;
        travelDetailMap.add('questionBody', questionBody);
        return travelDetailMap;
    }

    var getTravelDetails = function (travelWidget){
        var travelPayload = {:};
        travelPayload.add()
        for(var values : travelWidget.childrenMap){
             travelPayload.add('sts',  values.departureStationTxt.value);
      travelPayload.add('sts',  values.departureStationTxt.value);
      travelPayload.add('departureDate',  values.departureStationTxt.value);
      travelPayload.add('arrivalDate',  values.departureStationTxt.value);
      travelPayload.add('modeOfTransport',  values.departureStationTxt.value);
            travelPayload.add('departurePoint', values.departureStationTxt.value);
            travelPayload.add('arrivalPoint', values.departureStationTxt.value);
             travelPayload.add('lodging', values.departureStationTxt.value);
      travelPayload.add('fromProfile', values.departureStationTxt.value);
      travelPayload.add('lastName', values.departureStationTxt.value);
        }

    }


    var panelInfo = function(){
        console.info('Enter Panel function');
        console.info('travelPanel = ' + json:asJSON(travelPanel));
        console.info('travelPanel.getPanels() = ' + json:asJSON(travelPanel.getPanels()));

        var travelPayload = {:};
        var travelList = [];

        for(var TravelLodging : travelPanel.getPanels()){
            console.info('Travel and Loding = ' + json:asJSON(TravelLodging));
            console.info('children = ' + json:asJSON(TravelLodging.getChildren()));
                console.info('children[0] = ' + json:asJSON(TravelLodging.getChildren()[0]));
                console.info('children[0].title = ' + json:asJSON(TravelLodging.getChildren()[0].title));

                for (var TravelDetails : TravelLodging.getChildren()) {
                 console.info('TravelDetails = ' + json:asJSON(TravelDetails));
                     getTravelDetails(TravelDetails);
             }

                /*
                if(empty q.getChildren()[0].value){

                        console.info('qchildren = ' + qchildren);
                    var questionDetails = getTravelPayload(q);
                        travelList.add(questionDetails);
                }
*/
        }

    }

  %>",
  "onLoad": "<%
             pageVariables.accompanyingTravellers = [{'body':{'id':'2a8b5c2fcf739006419c28d803490000','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Logan'},'status':201},{'body':{'id':'2a8b5c2fcf739006419c297190a00000','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Megan'},'status':201},{'body':{'id':'2a8b5c2fcf739006419c297190a00001','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Pat'},'status':201}];
             pageVariables.accompanyingTravellers1 = [{'body':{'id':'2a8b5c2fcf739006419c28d803490000','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Logan'}},{'body':{'id':'2a8b5c2fcf739006419c297190a00000','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Megan'}}];
             pageVariables.sts = 'This is the STS';

             %>",
  "presentation": {
    "headerSize": "VPS_DEFAULT",
    "pageType": "edit",
    "title": {
      "type": "title",
      "label": "Workday Extend"
    },
    "body": {
      "type": "section",
      "horizontal": false,
      "children": [
        {
          "type": "fieldSet",
          "title": "Travel and Lodging Information",
          "children": [
            {
              "type": "text",
              "label": "accompanyingTravellers",
              "id": "accompanyingTravellersTxt",
              "required": false,
              "enabled": false,
              "value": "<%!empty(pageVariables.accompanyingTravellers) ? json:asJSON(pageVariables.accompanyingTravellers) : 'Empty' %>"
            },
            {
              "type": "panelList",
              "label": "Expense Items",
              "id": "travelPanel",
              "panels": "<% pageVariables.accompanyingTravellers %>",
              "panelName": "travelAndLodging",
              "indexVariableName": "loopIndex",
              "children" : [
                {
                  "type": "fieldSet",
                  "id": "TravelDetails",
                  "title": "<% 'Travel Details - '%>",
                  "collapsible": true,
                  "children": [
                    {
                      "type": "text",
                      "id": "indexId",
                      "enabled": false,
                      "value": "<% loopIndex %>"
                    },
                    {
                      "type": "checkBox",
                      "label": "Copy Travel details from previous travller",
                      "id": "copyTravelDetails",
                      "required": false,
                      "enabled": true,
                      "trueLabel": "True Label",
                      "falseLabel": "False Label",
                      "visible": "<% loopIndex!=0 %>",
                      "value": "",
                      "onChange":"<%
                      //TODO - check not empty
                      %>"
                    },
                    {
                      "type": "text",
                      "label": "id",
                      "id": "accompanyingTravellerId",
                      "enabled": false,
                      "value": "<%  !empty(objectToLoopOn.body.id) ? objectToLoopOn.body.id : 'empty'              %>",
                      "valueOutBinding": "updateAccompanyingTravellers.data[].id"
                    },
                    {
                      "type": "instanceList",
                      "label": "Travller",
                      "id": "travellerIL",
                      "multiSelect": false,
                      "required": true,
                      "enabled": true,
                      "values": "<% travelAndLodging.body.map(x => {{'id': x.id, 'descriptor': x.firstName }}) %>",
                      "onChange": "<%   %>"
                    },
                    {
                      "type" : "text",
                      "id": "stsValue",
                      "label": "<% 'Segment Specific STS' %>",
                      "value" : "",
                      "valueOutBinding": "updateAccompanyingTravellers.data[].sts",
                      "onChange": "<%
                                   panelInfo();
                                   %>"

                    },

                        {
                          "type": "date",
                          "label": "Depature Date",
                          "id": "depatureDateDt",
                          "required": true,
                          "enabled": true,
                          "value": "<% Dates.getDateTimeNowFormatted() %>",
                          "valueOutBinding": "updateAccompanyingTravellers.data[].departureDate",
                          "onChange": "<%
                           %>"
                        },
                        {
                          "type": "text",
                          "label": "Departure Time",
                          "id": "departureTimeTxt",
                          "required": true,
                          "enabled": true,
                          "value": ""

                    },
                        {
                          "type": "date",
                          "label": "Arrival Date",
                          "id": "arrivalDateDt",
                          "required": true,
                          "enabled": true,
                          "value": "<% Dates.getDateTimeNowFormatted() %>",
                          "valueOutBinding": "updateAccompanyingTravellers.data[].arrivalDate",
                          "onChange": "<%
                           %>"
                        },
                        {
                          "type": "text",
                          "label": "Arrival Time",
                          "id": "arrivalTimeTxt",
                          "required": true,
                          "enabled": true,
                          "value": ""
                        }
                      ,
                    {
                      "type": "instanceList",
                      "label": "Mode of Transport",
                      "id": "modeOfTransportIL",
                      "multiSelect": false,
                      "required": true,
                      "enabled": true,
                      "values": "<% OOB.getModeOfTransport() %>",
                      "onChange": "<%

                      %>"
                    },
                    {
                      "type":"hidden",
                      "id": "modeOfTransportName",
                      "value":"",
                      "valueOutBinding": "updateAccompanyingTravellers.data[].modeOfTransport"
                    },
                        {
                          "type": "text",
                          "label": "Departure Airport",
                          "id": "<% 'departureAirportTxt' %>",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "valueOutBinding": "updateAccompanyingTravellers.data[].departurePoint"
                        },
                        {
                          "type": "text",
                          "label": "Arrival Airport",
                          "id": "arrivalAirportTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "valueOutBinding": "updateAccompanyingTravellers.data[].arrivalPoint"
                        },
                        {
                          "type": "text",
                          "label": "Airline",
                          "id": "airlineTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "_test": "<%/*TODO no object to save field*/%>"

                    },

                        {
                          "type": "radioGroup",
                          "label": "Is this your assigned vehicle?",
                          "id": "yourVehicleRG",
                          "required": false,
                          "enabled": true,
                          "instanceList": [
                            {
                              "id": "yes",
                              "descriptor": "Yes"
                            },
                            {
                              "id": "no",
                              "descriptor": "No"
                            }
                          ]
                        },

                            {
                              "type": "text",
                              "label": "Give car details",
                              "id": "giveCarDetailsTxt",
                              "required": false,
                              "enabled": true,
                              "_test": "<%/*TODO no object to save field*/%>"

                    },

                        {
                          "type": "text",
                          "label": "Bus Number",
                          "id": "busNumberTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "_test": "<%/*TODO no object to save field*/%>"
                    },
                        {
                          "type": "text",
                          "label": "TestField",
                          "id": "testFieldTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "_test": "<%/*TODO no object to save field*/%>"
                    },

                        {
                          "type": "text",
                          "label": "Departure Station",
                          "id": "departureStationTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "valueOutBinding": "updateAccompanyingTravellers.data[].departurePoint"
                        },
                        {
                          "type": "text",
                          "label": "Arrival Station",
                          "id": "arrivalStationTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "valueOutBinding": "updateAccompanyingTravellers.data[].arrivalPoint"

                    },

                        {
                          "type": "text",
                          "label": "TestBoat",
                          "id": "testBoatTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "_test": "<%/*TODO no object to save field*/%>"
                        },
                        {
                          "type": "text",
                          "label": "Departure location",
                          "id": "<% 'departureAirportTxt' %>",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "valueOutBinding": "updateAccompanyingTravellers.data[].departurePoint"
                        },
                        {
                          "type": "text",
                          "label": "Arrival location",
                          "id": "arrivalAirportTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "valueOutBinding": "updateAccompanyingTravellers.data[].arrivalPoint"

                    },

                        {
                          "type": "text",
                          "label": "Mode Of Transport Other",
                          "id": "modeOfTransportOtherTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "_test": "<%/*TODO no object to save field*/%>"
                        }
                      ,
                    {
                      "type": "checkBox",
                      "label": "Add this location to my frequent destination list",
                      "id": "addToFrequentTravels",
                      "required": false,
                      "enabled": true,
                      "trueLabel": "True Label",
                      "falseLabel": "False Label",
                      "value": ""
                    }
                  ]
                }




              ]
            },
            {
              "type": "text",
              "label": "loop",
              "id": "loopTxt",
              "required": true,
              "enabled": false,
              "value": "<% 'test' %> "
            }
          ]
        },
        {
          "type": "editButtonBar",
          "editButtons": [
            {
              "type": "editButton",
              "label": "<% 'Next' %>",
              "buttonType": "PRIMARY",
              "sortOrder": "a",
              "id": "nextBtn"
            },
            {
              "type": "editButton",
              "label": "<% 'Save For Later' %>",
              "id": "saveForLaterBtn",
              "sortOrder": "b",
              "buttonType": "AUXILIARY"
            }
          ]
        }
      ]
    }
  }
}