{
  "id": "createOOBRequest-b-TravelLodgingDetails",
  "endPoints": [
    {
      "name": "getCurrentWorker",
      "baseUrlType": "WORKDAY-COMMON",
      "url": "/workers/me",
      "authType": "sso"
    },
    {
      "name": "getLodging",
      "url": "<% 'https://api.workday.com/wql/v1/data?query=' + ('SELECT favouriteDestinations{workdayID as id, name as descriptor, countryCode, addressLine1, addressLine2, addressLine3, city, state, postalCode, contactNumber} as favouriteDestinations FROM outOfBed_sykqld_oobProfiles where worker in (\\'' + getCurrentWorker.id + '\\')').urlEncode() %>",
      "authType": "wcpisu",
      "httpMethod": "GET"
    },
    {
      "name": "getLodgingOld",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + ('SELECT workdayID as id, Destination, name AS descriptor FROM outOfBed_sykqld_destinations WHERE name is not null ORDER BY createdMoment DESC').urlEncode() %>",
      "authType": "sso"
    },
    {
      "name": "getCountrySearch",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + ('SELECT workdayID, countryName AS descriptor, alpha_3Code AS id FROM countries WHERE countryName CONTAINS \"' + instanceListQuery.replace('+',' ') + '\"').urlEncode() %>",
      "authType": "wcpisu",
      "exclude": "<% empty instanceListQuery %>",
      "deferred": true
    },
    {
      "name": "getCitiesSearch",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + ('SELECT workdayID, travelCity, travelCityName as descriptor, inactive FROM travelCities WHERE inactive = false AND travelCityName CONTAINS \"' + instanceListQuery.replace('+',' ') + '\" ORDER BY travelCityName ASC, country ASC').urlEncode() %>",
      "authType": "wcpisu",
      "exclude": "<% empty instanceListQuery %>",
      "deferred": true
    },
    {
      "name": "getStates",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + OOB.getStates() %>",
      "authType": "wcpisu"
    },
    {
      "name": "getAccompanyTravllers",
      "baseUrlType": "WORKDAY-WQL",
      "exclude": "<% empty(flowVariables.oobRequest) %>",
      "url": "<% '/data?query=' + ('SELECT workdayID AS id, sts,firstName, lastName, fromProfile, oobRequest FROM outOfBed_sykqld_accompanyingTravellers WHERE oobRequest in ('+ flowVariables.oobRequest +') ORDER BY createdMoment DESC').urlEncode() %>",
      "authType": "sso"
    }
  ],
  "outboundData": {
    "outboundEndPoints": [
      {
        "_generationNote": "Creates a single instance, as specified by of the OOBProfile business object resource.",
        "name": "createDestinations",
        "url": "<% `https://api.workday.com/apps/outOfBed_sykqld/v1/destinations?bulk=true` %>",
        "authType": "wcpisu",
        "httpMethod": "POST",
        "_onSend":"<% console.info('Destinations Create self.data' + json:asJSON(self.data))%>",
        "failOnStatusCodes": [{"code":400},{"code":403}]
      },
      {
        "_generationNote": "Creates a single instance, as specified by of the OOBProfile business object resource.",
        "name": "updateAccompanyingTravellers",
        "url": "<% `https://api.workday.com/apps/outOfBed_sykqld/v1/accompanyingTravellers?bulk=true` %>",
        "authType": "sso",
        "httpMethod": "PATCH",
        "_onSend": "<% //todo can be removed
                    console.info('update accompany Travellers' + json:asJSON(self.data)) %>",
        "failOnStatusCodes": [{"code":400},{"code":403}]
      },
      {
        "_generationNote": "Creates a single instance, as specified by of the OOBProfile business object resource.",
        "name": "createAccompanyingTravellers",
        "url": "<% `https://api.workday.com/apps/outOfBed_sykqld/v1/accompanyingTravellers?bulk=true` %>",
        "authType": "sso",
        "httpMethod": "POST",
        "onSend": "<% console.info('create accompany Travellers' + json:asJSON(self.data))
                   return self.data;
                   %>",
        "failOnStatusCodes": [{"code":400},{"code":403}]
      },
      {
        "_generationNote": "Creates a single instance, as specified by of the OOBProfile business object resource.",
        "name": "updateOOBRequest",
        "url": "<% `https://api.workday.com/apps/outOfBed_sykqld/v1/oobRequests/` + flowVariables.oobRequest %>",
        "authType": "sso",
        "httpMethod": "PATCH",
        "onSend": "<%
        //TODO add flowVariables.oobRequest
          console.info('createAccompanyingTravellers' + json:asJSON(createAccompanyingTravellers)) ;
          console.info('createDestinations' + json:asJSON(createDestinations.data.map(x=> {{'id' : x.body.id}}))) ;
          console.info('createAccompanyingTravellers.data.map' + json:asJSON(createAccompanyingTravellers.data.map(x=> {{'id' : x.body.id}}))) ;

          console.info('Obb update destination self.data = ' + json:asJSON(self.data));
          self.data;
        %>",
        "failOnStatusCodes": [{"code":400},{"code":403}],
        "values": [
          {
            "outboundPath": "accompanyingTravellers",
            "value": "<% !empty(createAccompanyingTravellers.data) ? createAccompanyingTravellers.data.map(x=> {{'id' : x.body.id}}) : '' %>"
          },
          {
            "outboundPath": "lodging",
            "value": "<% !empty(createDestinations.data) ? createDestinations.data.map(x=> {{'id' : x.body.id}}) : '' %>"
          }
          ]
      },
      {
        "name": "transitionOutboundVars",
        "type": "outboundVariable",
        "variableScope": "flow",
        "values": [
          {
            "outboundPath": "saveForLater",
            "value": "<% !empty(saveForLaterBtn.value) %>"
          },
          {
            "outboundPath": "proceed",
            "value": "<% !empty(nextBtn.value) %>"
          }
        ]
      }
    ]
  },
  "include": [
    "OOB.script",
    "Dates.script"
  ],
  "script": "<%
    var getTravelDetails = function (travelWidget){
      var travelPayload = {:};
      //console.info('in if statement, travelWidget = ' + json:asJSON(travelWidget));
      !empty(travelWidget.accompanyingTravellerId) ?  travelPayload.add('id',  accompanyingTravellerId.value ?: '') : null ;
      //travelPayload.add('isExisting',  travelWidget.isExistingTravller.value);
      //travelPayload.add('id',  travelWidget.travellerId.value ?: '');
      travelPayload.add('descriptor',  travelWidget.travellerName.value ?: '');
      travelPayload.add('sts',  travelWidget.stsValue.value ?: '');
      travelPayload.add('departureDate',  travelWidget.departureDateDt.value ?: '');
      travelPayload.add('arrivalDate',  travelWidget.arrivalDateDt.value ?: '');
      travelPayload.add('modeOfTransport',  travelWidget.modeOfTransportName.value ?: '');
      travelPayload.add('departurePoint', travelWidget.departureAirportTxt.value ?: '');
      travelPayload.add('arrivalPoint', travelWidget.arrivalAirportTxt.value ?: '');
      travelPayload.add('lodging', '');
      travelPayload.add('firstName', '');
      travelPayload.add('lastName', '');
      travelPayload.add('fromProfile', '');
      travelPayload.add('oobRequest',  '');

      travelPayload.add('airline',  travelWidget.airlineTxt.value ?: '');
      travelPayload.add('busNumber',  travelWidget.busNumberTxt.value ?: '');
      travelPayload.add('assignedVehicle',  travelWidget.yourVehicleRG.value ?: '');
      travelPayload.add('carDetails',  travelWidget.giveCarDetailsTxt.value ?: '');
      travelPayload.add('otherTransport',  travelWidget.modeOfTransportOtherTxt.value ?: '');

      return travelPayload;
    }

    var panelInfoOld = function(){
      var travelPayload = {:};
      var travelList = [];
      var counter = 0;
      for(var TravelLodging : travelPanel.getPanels()){
      counter +=1;
        for (var TravelDetails : TravelLodging.getChildren()) {
          var payload = getTravelDetails(TravelDetails);
              travelList.add(payload);
        }
        travelPayload.add('data',travelList);
        console.info('travelPayload = ' + json:asJSON(travelPayload));
        return travelPayload;
      }
    }

     var panelInfo = function(){
       console.info('Enter Panel function');
       var travelPayload = {:};
       var travelList = [];
       var counter = 0;

       for(var x : travelPanel.getPanels()){
         console.info('x[counter] = ' + json:asJSON(x));
         console.info('x[counter].getChildren[0] = ' + json:asJSON(x.getChildren()[0]));
         for (var TravelDetails : x.getChildren()) {
           var payload = getTravelDetails(TravelDetails);
           travelList.add(payload);
         }
         counter +=1;
       }

      travelPayload.add('data',travelList);
      console.info('travelPayload = ' + json:asJSON(travelPayload));
      return travelPayload;
  }



  var togglewidgets = function(enableWidgets, disableWidgets){
      if(!empty(enableWidgets)){
        for(var x : enableWidgets){
          x.setVisible(true);
          x.setRequired(true);
          x.setEnabled(true);
          empty(x.value) ? '' : x.setValue('');
        }
      }
      if(!empty(disableWidgets)){
      for(var x : disableWidgets){
        x.setVisible(false);
        x.setRequired(false);
        x.setEnabled(false);
        empty(x.value) ? '' : x.setValue('');
      }
     }

  }

       var setDoNotAddPanelList = function() {
  console.info('travelPanel' + json:asJSON(travelPanel));
             travelPanel.setDoNotAdd(travelPanel.getPanels().size() <= 1);

       }

/*
     TODO - Logic for page
     section to wrap everything so i can iterate on the children to save data
     wrap in loop (loop is invisible)
     loop will iterate on logan
     wrap the below in a section
     create two fieldsets (2 field sets within
     within the fields sets is the two panel lists - travel and Lodging
     when storing the accompanying traveller to the OOB request. Can we have multiple panels per accompany traveller?
*/
  %>",
  "onLoad": "<%
   pageVariables.accompanyingTravellers2 = [
    {'body':{'id':'2a8b5c2fcf739006419c28d803490000','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Logan'}, 'status':201},
    {'body':{'id':'2a8b5c2fcf739006419c297190a00000','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Megan'},'status':201},
    {'body':{'id':'2a8b5c2fcf739006419c297190a00001','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Pat'},'status':201}];
   pageVariables.accompanyingTravellers1 = [{'id':'2a8b5c2fcf739006419c28d803490000','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Logan'},{'id':'2a8b5c2fcf739006419c297190a00000','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Megan'}];
   pageVariables.accompanyingTravellerNames = flowVariables.accompanyingTravellerNames;
   pageVariables.accompanyingTravellers = !empty(getAccompanyTravllers.data) ? getAccompanyTravllers.data : pageVariables.accompanyingTravellers1;
   pageVariables.favouriteDestinations = [];

   %>",
  "presentation": {
    "headerSize": "VPS_DEFAULT",
    "pageType": "edit",
    "title": {
      "type": "title",
      "label": "Workday Extend"
    },
    "body": {
      "type": "section",
      "horizontal": false,
      "children": [
        {
          "type": "text",
          "label": "test",
          "id": "testTxt",
          "required": false,
          "enabled": false,
          "value": "<% !empty(getLodging) ? getLodging : 'empty' %>"
        },
        {
          "type": "section",
          "children": [
            {
              "type" : "loop",
              "label": "Loop",
              "on" : "<% pageVariables.accompanyingTravellerNames %>",
              "as" : "objectToLoopOn",
              "index": "loopIndex",
              "children" : [
                {
                  "type": "section",
                  "children": [
                    {
                      "type": "fieldSet",
                      "collapsible": true,
                      "title": "<% 'Travel Details - ' + objectToLoopOn.name ?: ''  %>",
                      "id": "travelFieldSet",
                      "children":[
                        {
                          "type": "hidden",
                          "id": "travellerFirstNameTxt",
                          "value": "<% objectToLoopOn.name ? objectToLoopOn.name.substringBefore(' ') : '' %>"
                        },
                        {
                          "type": "hidden",
                          "id": "travellerLastNameTxt",
                          "value": "<% objectToLoopOn.name ? objectToLoopOn.name.substringAfter(' ') : '' %>"
                        },
                        {
                          "type": "panelList",
                          "label": "Travel Events",
                          "id": "travelPanel",
                          "panels": "<% [0] %>",
                          "isArrayOutBinding": true,
                          "panelName": "travelDeatilsPanels",
                          "indexVariableName": "travelPanelIndex",
                          "onPanelAdd": "<%
                            //var travelPanels = self.getPanels();
                            //var newPanel = travelPanels[travelPanels.size() - 1];
                            //newPanel.getChildren()[0].accompanyingTravellerId.setValue(loopTxt.value);
                          %>",
                          "children": [
                            {
                              "type": "fieldSet",
                              "collapsible": true,
                              "title": "Travel Event Details",
                              "children": [
                            {
                              "type": "checkBox",
                              "label": "Copy Travel details from previous travller",
                              "id": "copyTravelDetails",
                              "required": false,
                              "enabled": true,
                              "trueLabel": "True Label",
                              "falseLabel": "False Label",
                              "visible": "<% loopIndex!=0 %>",
                              "value": "",
                              "onChange": "<%
                                //TODO - check not empty
                                if(self.value){
                                  panelInfo();
                                  existingTravelDetailsIL.setVisible(true);
                                  existingTravelDetailsIL.setValues(panelInfo().data);
                                }
                              %>"
                            },
                            {
                              "type": "instanceList",
                              "label": "Existing Travelers Details",
                              "id": "existingTravelDetailsIL",
                              "multiSelect": false,
                              "required": false,
                              "enabled": true,
                              "visible": "<% false %>",
                              "values": "<% !empty(panelInfo()) ? panelInfo.data[0] : [] %>",
                              "onChange": "<%%>"
                            },
                            {
                              "type": "hidden",
                              "id": "oobRequestID",
                              "value": "<%  !empty(flowVariables.oobRequest) ? flowVariables.oobRequest : '' %>",
                              "valueOutBinding": "createAccompanyingTravellers.data[].oobRequest.id"
                            },
                            {
                              "type": "hidden",
                              "id": "firstNameTxt",
                              "value": "<% travellerFirstNameTxt.value %>",
                              "valueOutBinding": "createAccompanyingTravellers.data[].firstName"
                            },
                            {
                              "type": "hidden",
                              "id": "lastNameTxt",
                              "value": "<% travellerLastNameTxt.value %>",
                              "valueOutBinding": "createAccompanyingTravellers.data[].lastName"
                            },
                            {
                              "type" : "text",
                              "id": "stsValue",
                              "label": "<% 'Segment Specific STS' %>",
                              "value" : "<% !empty(flowVariables.sts) ? flowVariables.sts : '' %>",
                              "valueOutBinding": "createAccompanyingTravellers.data[].sts",
                              "onChange": "<%
                                           panelInfo();
                                           %>"
                            },
                            {
                              "type": "date",
                              "label": "Depature Date",
                              "id": "departureDateDt",
                              "required": true,
                              "enabled": true,
                              "value": "<% Dates.getDateTimeNowFormatted() %>",
                              "valueOutBinding": "createAccompanyingTravellers.data[].departureDate",
                              "onChange": "<%%>"
                            },
                            {
                              "type": "text",
                              "label": "Departure Time",
                              "id": "departureTimeTxt",
                              "required": true,
                              "enabled": true,
                              "value": "",
                              "valueOutBinding": "createAccompanyingTravellers.data[].departureTime"
                            },
                            {
                              "type": "date",
                              "label": "Arrival Date",
                              "id": "arrivalDateDt",
                              "required": true,
                              "enabled": true,
                              "value": "<% Dates.getDateTimeNowFormatted() %>",
                              "valueOutBinding": "createAccompanyingTravellers.data[].arrivalDate",
                              "onChange": "<%  %>"
                            },
                            {
                              "type": "text",
                              "label": "Arrival Time",
                              "id": "arrivalTimeTxt",
                              "required": true,
                              "enabled": true,
                              "value": "",
                              "valueOutBinding": "createAccompanyingTravellers.data[].arrivalTime"
                            },
                            {
                              "type": "instanceList",
                              "label": "Mode of Transport",
                              "id": "modeOfTransportIL",
                              "multiSelect": false,
                              "required": true,
                              "enabled": true,
                              "values": "<% OOB.getModeOfTransport() %>",
                              "onChange": "<%
                                !empty(self.selectedEntries[0]) ? modeOfTransportName.setValue(self.selectedEntries[0].descriptor) :  modeOfTransportName.setValue('');
                                if(!empty(self.selectedEntries[0])) {
                                  if(self.selectedEntries[0].id == 'air'){
                                    var toggleOn = [departureAirportTxt, arrivalAirportTxt,airlineTxt];
                                    var toggleOff = [yourVehicleRG,busNumberTxt, modeOfTransportOtherTxt];
                                    togglewidgets(toggleOn,toggleOff);
                                    }else if (self.selectedEntries[0].id == 'car'){
                                      var toggleOn = [yourVehicleRG];
                                      var toggleOff = [departureAirportTxt,arrivalAirportTxt,airlineTxt, modeOfTransportOtherTxt,busNumberTxt,giveCarDetailsTxt];
                                      togglewidgets(toggleOn,toggleOff );
                                    }else if (self.selectedEntries[0].id == 'bus'){
                                      var toggleOn = [busNumberTxt, departureAirportTxt,arrivalAirportTxt];
                                      var toggleOff = [airlineTxt, modeOfTransportOtherTxt, giveCarDetailsTxt,yourVehicleRG];
                                      togglewidgets(toggleOn,toggleOff );
                                    }else if (self.selectedEntries[0].id == 'train'){
                                      var toggleOn = [busNumberTxt, departureAirportTxt,arrivalAirportTxt];
                                      var toggleOff = [airlineTxt, modeOfTransportOtherTxt, giveCarDetailsTxt, yourVehicleRG];
                                      togglewidgets(toggleOn,toggleOff );
                                    }else if (self.selectedEntries[0].id == 'boat'){
                                      var toggleOn = [busNumberTxt, departureAirportTxt,arrivalAirportTxt];
                                      var toggleOff = [airlineTxt, modeOfTransportOtherTxt, giveCarDetailsTxt, yourVehicleRG];
                                      togglewidgets(toggleOn,toggleOff );
                                    }else if (self.selectedEntries[0].id == 'other'){
                                      var toggleOn = [modeOfTransportOtherTxt];
                                      var toggleOff = [airlineTxt, giveCarDetailsTxt,busNumberTxt, departureAirportTxt, arrivalAirportTxt];
                                      togglewidgets(toggleOn,toggleOff );
                                    }else{
                                      var toggleOn = [];
                                      var toggleOff = [airlineTxt, modeOfTransportOtherTxt, yourVehicleRG, giveCarDetailsTxt,busNumberTxt, departureAirportTxt, arrivalAirportTxt];
                                      togglewidgets(toggleOn,toggleOff );
                                    }
                                  }else{
                                   var toggleOn = [];
                                   var toggleOff = [airlineTxt, modeOfTransportOtherTxt, yourVehicleRG, giveCarDetailsTxt,busNumberTxt, departureAirportTxt, arrivalAirportTxt];
                                   togglewidgets(toggleOn,toggleOff );
                                  }
                              %>"
                            },
                            {
                              "type":"hidden",
                              "id": "modeOfTransportName",
                              "value":"",
                              "valueOutBinding": "createAccompanyingTravellers.data[].modeOfTransport"
                            },
                            {
                              "type": "text",
                              "label": "Bus/Train/Boat Number",
                              "id": "busNumberTxt",
                              "required": false,
                              "visible": false,
                              "enabled": true,
                              "value": "",
                              "valueOutBinding": "createAccompanyingTravellers.data[].transportNumber"
                            },
                            {
                              "type": "text",
                              "label": "Airline",
                              "visible": false,
                              "id": "airlineTxt",
                              "required": false,
                              "enabled": true,
                              "value": "",
                              "valueOutBinding": "createAccompanyingTravellers.data[].airline"

                            },
                            {
                              "type": "text",
                              "label": "Departure location",
                              "id": "departureAirportTxt",
                              "required": false,
                              "visible": false,
                              "enabled": true,
                              "value": "",
                              "valueOutBinding": "createAccompanyingTravellers.data[].departurePoint"
                            },
                            {
                              "type": "text",
                              "label": "Arrival location",
                              "id": "arrivalAirportTxt",
                              "required": false,
                              "visible": false,
                              "enabled": true,
                              "value": "",
                              "valueOutBinding": "createAccompanyingTravellers.data[].arrivalPoint"
                            },
                            {
                              "type": "radioGroup",
                              "label": "Is this your assigned vehicle?",
                              "id": "yourVehicleRG",
                              "required": false,
                              "hideDisplayOption": true,
                              "visible": false,
                              "enabled": true,
                              "instanceList": [
                                {
                                  "id": "yes",
                                  "descriptor": "Yes"
                                },
                                {
                                  "id": "no",
                                  "descriptor": "No"
                                }
                              ],
                              "valuesOut": [
                              {
                                "valueOutBinding": "createAccompanyingTravellers.data[].assignedVehicle",
                                "value": "<% self.value[0] == 'yes' ? true : false %>"
                              }
                            ],
                              "onChange": "<%
                                if(self.selectedEntries[0].id == 'yes'){
                                  giveCarDetailsTxt.setEnabled(true);
                                  giveCarDetailsTxt.setVisible(true);
                                  giveCarDetailsTxt.setRequired(true);
                                }else{
                                  giveCarDetailsTxt.setEnabled(false);
                                  giveCarDetailsTxt.setVisible(false);
                                  giveCarDetailsTxt.setRequired(false);
                                  giveCarDetailsTxt.setValue('');
                                }
                              %>"
                            },
                            {
                              "type": "text",
                              "label": "Give car details",
                              "id": "giveCarDetailsTxt",
                              "visible": false,
                              "required": false,
                              "enabled": true,
                              "valueOutBinding": "createAccompanyingTravellers.data[].carDetails"
                            },
                            {
                              "type": "text",
                              "label": "Mode Of Transport Other",
                              "id": "modeOfTransportOtherTxt",
                              "required": false,
                              "visible": false,
                              "enabled": true,
                              "value": "",
                              "valueOutBinding": "createAccompanyingTravellers.data[].otherTransport"
                            },
                            {
                              "type": "checkBox",
                              "label": "Add this location to my frequent destination list",
                              "id": "addToFrequentTravels",
                              "required": false,
                              "visible": false,
                              "enabled": true,
                              "trueLabel": "True Label",
                              "falseLabel": "False Label",
                              "value": ""
                            }
                            ]
                          }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "fieldSet",
                      "id": "lodgingFieldSet",
                      "collapsible": true,
                      "title": "<% 'Lodging Details - ' + (objectToLoopOn.name ?? '')%>",
                      "children": [
                        {
                          "type": "hidden",
                          "id": "travellerNameTxt",
                          "value": "<% !empty(objectToLoopOn.name) ? objectToLoopOn.name : '' %>"
                        },
                        {
                          "type": "panelList",
                          "label": "Lodging Events",
                          "id": "LodgingPanel",
                          "panels": "<% [0] %>",
                          "panelName": "lodgingDetailsPanels",
                          "indexVariableName": "travelPanelIndex",
                          "isArrayOutBinding": true,
                          "children" : [
                            {
                              "type":"fieldSet",
                              "id": "LodgingDetails",
                              "title": "<% 'Lodging Details'%>",
                              "collapsible": true,
                              "children": [
                                {
                                  "type": "hidden",
                                  "id": "oobRequestID",
                                  "value": "<%  !empty(flowVariables.oobRequest) ? flowVariables.oobRequest : '' %>",
                                  "valueOutBinding": "createDestinations.data[].oobRequest.id"
                                },
                                {
                                  "type": "hidden",
                                  "id": "lodgingTravellerNameTxt",
                                  "value": "<% !empty(travellerNameTxt.value) ? travellerNameTxt.value : '' %>",
                                  "valueOutBinding": "createDestinations.data[].travellerName"
                                },
                                {
                                  "type": "section",
                                  "columnWidthRatios": [0.5,0.5],
                                  "horizontal": true,
                                  "children": [
                                    {
                                      "type": "date",
                                      "label": "Start Date",
                                      "id": "lodgingStartDateDt",
                                      "required": true,
                                      "enabled": true,
                                      "value": "<% date:now().format('yyyy-MM-dd') %>",
                                      "valueOutBinding": "createDestinations.data[].startDate"
                                    },
                                    {
                                      "type": "date",
                                      "label": "End Date",
                                      "id": "lodgingEndDateDt",
                                      "required": true,
                                      "enabled": true,
                                      "value": "<% date:now().format('yyyy-MM-dd') %>",
                                      "valueOutBinding": "createDestinations.data[].endDate"
                                    }
                                  ]
                                },
                                {
                                  "type": "instanceList",
                                  "label": "Lodging/Destination Name",
                                  "id": "lodgingIL",
                                  "multiSelect": false,
                                  "required": true,
                                  "enabled": true,
                                  "values": "<% !empty(getLodging.data[0])? getLodging.data[0].favouriteDestinations.add({'id': 'other', 'descriptor': 'Other'}) : [{'id': 'other', 'descriptor': 'Other'}] %>",
                                  "onChange": "<%
                                    if(empty(self.selectedEntries[0])){
                                      lodgingOtherTxt.value = ''; lodgingOtherTxt.setVisible(false); lodgingOtherTxt.setRequired(false);
                                      freqDestChbx.setVisible(false);
                                    }else if(self.selectedEntries[0].id == 'other'){
                                      lodgingOtherTxt.value = ''; lodgingOtherTxt.setVisible(true); lodgingOtherTxt.setRequired(true); lodgingOtherTxt.setEnabled(true);
                                      freqDestChbx.setVisible(true);
                                    }else{
                                      lodgingOtherTxt.setValue(self.selectedEntries[0].descriptor); lodgingOtherTxt.setRequired(false); lodgingOtherTxt.setEnabled(false);
                                      freqDestChbx.setVisible(false);
                                      var valueToFindAgain = self.selectedEntries[0].id;
                                      countryText.setValue(getLodging.data[0].favouriteDestinations.find(x=>{x.id == valueToFindAgain}).addressLine1 ?: 'Blank');
                                    }
                                  %>"
                                },
                                {
                                  "type": "text",
                                  "label": "Lodging Name",
                                  "id": "lodgingOtherTxt",
                                  "required": false,
                                  "enabled": false,
                                  "visible": true,
                                  "valueOutBinding": "createDestinations.data[].name"
                                },
                                {
                                  "type": "instanceList",
                                  "label": "Country",
                                  "id": "countryIl",
                                  "multiSelect": false,
                                  "required": true,
                                  "enabled": true,
                                  "visible": true,
                                  "searchEndPoint": "<% endpoints.getCountrySearch %>",
                                  "searchResultValues": "<% !empty(getCountrySearch.data) ? getCountrySearch.data : [] %>",
                                  "values": "<% !empty(getCountrySearch.data) ? getCountrySearch.data : [] %>",
                                  "onChange": "<%
                                   if(empty(self.selectedEntries[0])){
                                     countryText.value = '';
                                     countryCodeText.value = '';
                                   }else{
                                     countryText.value = self.selectedEntries[0].descriptor;
                                     countryCodeText.value = self.selectedEntries[0].id;
                                   }
                                   %>"
                                },
                                {
                                  "type":"hidden",
                                  "id": "countryText",
                                  "value": ""
                                },
                                {
                                  "type":"text",
                                  "id": "countryCodeText",
                                  "label": "Country Code",
                                  "enabled": false,
                                  "value": "",
                                  "valueOutBinding": "createDestinations.data[].countryCode"
                                },
                                {
                                  "type": "text",
                                  "label": "Address Line 1",
                                  "id": "addressLine1Txt",
                                  "required": true,
                                  "enabled": true,
                                  "value": "",
                                  "valueOutBinding": "createDestinations.data[].addressLine1"
                                },
                                {
                                  "type": "text",
                                  "label": "Address Line 2",
                                  "id": "addressLine2Txt",
                                  "required": false,
                                  "enabled": true,
                                  "value": "",
                                  "valueOutBinding": "createDestinations.data[].addressLine2"
                                },
                                {
                                  "type": "text",
                                  "label": "Address Line 3",
                                  "id": "addressLine3Txt",
                                  "required": false,
                                  "enabled": true,
                                  "value": "",
                                  "valueOutBinding": "createDestinations.data[].addressLine3"
                                },
                                {
                                  "type": "instanceList",
                                  "label": "City",
                                  "id": "cityIl",
                                  "required": true,
                                  "enabled": true,
                                  "visible": true,
                                  "idKey": "workdayID",
                                  "displayKey": "descriptor",
                                  "searchEndPoint": "<% endpoints.getCitiesSearch %>",
                                  "searchResultValues": "<% !empty(getCitiesSearch.data) ? getCitiesSearch.data : [] %>",
                                  "values": "<% !empty(getCitiesSearch.data) ? getCitiesSearch.data : [] %>",
                                  "selectedValuesAndDescriptors":"<% [] %>",
                                  "onChange": "<% empty(self.selectedEntries[0]) ? cityText.value = '' : cityText.value = self.selectedEntries[0].descriptor %>"
                                },
                                {
                                  "type":"hidden",
                                  "id": "cityText",
                                  "value": "",
                                  "valueOutBinding": "createDestinations.data[].city"
                                },
                                {
                                  "type": "instanceList",
                                  "label": "State/Province/County",
                                  "id": "stateIl",
                                  "required": "<% false %>",
                                  "enabled": true,
                                  "values": "<% !empty(getStates.data) ? getStates.data : []  %>",
                                  "visible": "<% true %>",
                                  "onChange": "<% empty(self.selectedEntries[0]) ? stateText.value = '' : stateText.value = self.selectedEntries[0].descriptor %>"
                                },
                                {
                                  "type":"text",
                                  "id": "stateText",
                                  "value": "",
                                  "enabled": false,
                                  "valueOutBinding": "createDestinations.data[].state"
                                },
                                {
                                  "type": "text",
                                  "label": "Postal Code",
                                  "id": "postalCodeTxt",
                                  "required": false,
                                  "enabled": true,
                                  "value": "",
                                  "valueOutBinding": "createDestinations.data[].postalCode"
                                },
                                {
                                  "type": "text",
                                  "label": "Contact Number of Destination",
                                  "id": "contactNumberOfDestinationTxt",
                                  "required": false,
                                  "enabled": true,
                                  "value": "",
                                  "valueOutBinding": "createDestinations.data[].contactNumber"
                                },
                                {
                                  "type": "checkBox",
                                  "label": "Add this location to my frequent destination list",
                                  "id": "freqDestChbx",
                                  "required": false,
                                  "visible": false,
                                  "enabled": true,
                                  "trueLabel": "True Label",
                                  "falseLabel": "False Label",
                                  "value": "",
                                  "onChange": "<%
                                    if(self.value){

                                    }
                                  %>",
                                  "_valuesOut": [
                                    {
                                      "value": "<% self.value %>",
                                      "valueOutBinding": "createDestinations.addToProfile"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "editButtonBar",
          "editButtons": [
            {
              "type": "editButton",
              "label": "<% 'Next' %>",
              "buttonType": "PRIMARY",
              "sortOrder": "a",
              "id": "nextBtn"
            },
            {
              "type": "editButton",
              "label": "<% 'Save For Later' %>",
              "id": "saveForLaterBtn",
              "sortOrder": "b",
              "buttonType": "AUXILIARY"
            }
          ]
        }
      ]
    }
  }
}