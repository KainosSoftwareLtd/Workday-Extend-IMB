{
  "id": "createOOBRequest-b-TravelLodgingDetails",
  "endPoints": [
    {
      "name": "getLodging",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + ('SELECT workdayID as id, Destination, name AS descriptor FROM outOfBed_sykqld_destinations ORDER BY createdMoment DESC').urlEncode() %>",
      "authType": "sso"
    },
    {
      "name": "getCountrySearch",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + ('SELECT workdayID, countryName AS descriptor, alpha_3Code AS id FROM countries WHERE countryName CONTAINS \"' + instanceListQuery.replace('+',' ') + '\"').urlEncode() %>",
      "authType": "wcpisu",
      "exclude": "<% empty instanceListQuery %>",
      "deferred": true
    },
    {
      "name": "getCitiesSearch",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + ('SELECT workdayID, travelCity, travelCityName as descriptor, inactive FROM travelCities WHERE inactive = false AND travelCityName CONTAINS \"' + instanceListQuery.replace('+',' ') + '\" ORDER BY travelCityName ASC, country ASC').urlEncode() %>",
      "authType": "wcpisu",
      "exclude": "<% empty instanceListQuery %>",
      "deferred": true
    },
    {
      "name": "getCountriesSearch",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + ('SELECT country FROM countries WHERE countryName contains \\''+ instanceListQuery +'\\'').urlEncode() %>",
      "authType": "wcpisu",
      "deferred": true,
      "exclude": "<% empty instanceListQuery %>"
    },
    {
      "name": "getStates",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + OOB.getStates() %>",
      "authType": "sso"
    },
    {
      "name": "getAccompanyTravllers",
      "baseUrlType": "WORKDAY-WQL",
      "exclude": true,
      "url": "<% '/data?query=' + ('SELECT workdayID AS id, sts,firstName, lastName, fromProfile, oobRequest FROM outOfBed_sykqld_accompanyingTravellers WHERE oobRequest in ('+ flowVariables.oobRequest +') ORDER BY createdMoment DESC').urlEncode() %>",
      "authType": "sso"
    },
    {
      "name": "getAccompanyTravllersHardCoded",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + ('SELECT workdayID AS id, sts,firstName, lastName, fromProfile, oobRequest FROM outOfBed_sykqld_accompanyingTravellers WHERE oobRequest in (661f38b0479890082bd6b26d6d380000) ORDER BY createdMoment DESC').urlEncode() %>",
      "authType": "sso"
    },
    {
      "name": "getAccompanyTravllers2",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + ('SELECT workdayID AS id FROM outOfBed_sykqld_accompanyingTravellers ORDER BY createdMoment DESC').urlEncode() %>",
      "authType": "sso"
    }
  ],
  "outboundData": {
    "outboundEndPoints": [
      {
        "_generationNote": "Creates a single instance, as specified by of the OOBProfile business object resource.",
        "name": "createDestinations",
        "url": "<% `https://api.workday.com/apps/outOfBed_sykqld/v1/destinations?bulk=true` %>",
        "authType": "sso",
        "httpMethod": "POST",
        "_onSend": "<% %>",
        "failOnStatusCodes": [{"code":400},{"code":403}]
      },
      {
        "_generationNote": "Creates a single instance, as specified by of the OOBProfile business object resource.",
        "name": "updateAccompanyingTravellers",
        "url": "<% `https://api.workday.com/apps/outOfBed_sykqld/v1/accompanyingTravellers?bulk=true` %>",
        "authType": "sso",
        "httpMethod": "PATCH",
        "onSend": "<%console.info('update accompany Travellers' + json:asJSON(self.data)) %>",
        "failOnStatusCodes": [{"code":400},{"code":403}]
      },
      {
        "_generationNote": "Creates a single instance, as specified by of the OOBProfile business object resource.",
        "name": "mapAccompanyingTravellers",
        "url": "<% `https://api.workday.com/apps/outOfBed_sykqld/v1/accompanyingTravellers?bulk=true` %>",
        "authType": "sso",
        "exclude": true,
        "httpMethod": "PATCH",
        "failOnStatusCodes": [{"code":400},{"code":403}],
        "_onSend": "<%
          var updateList = [];
          var updateMap = {:};
          var destinationList = createDestinations.data.map(x=> {{'id' : x.body.id}});
          var accTravellerList = updateAccompanyingTravellers.data.map(x=> {{'id' : x.body.id}});

          console.info('createDestinations.data' + json:asJSON(createDestinations.data));
          console.info('updateAccompanyingTravellers.data' + json:asJSON(updateAccompanyingTravellers.data));
          console.info('destinationList = ' + destinationList);
          console.info('accTravellerList = ' + accTravellerList);

          var counter = 0;
        for(var x : accTravellerList){
          updateList.add({'id' : x.id, 'lodging':destinationList[counter]});
            counter += 1;
        }
          updateMap.add('data', updateList);
        console.info('map = ' + json:asJSON(updateMap));
                   %>"
      },
      {
        "name": "transitionOutboundVars",
        "type": "outboundVariable",
        "variableScope": "flow",
        "values": [
          {
            "outboundPath": "saveForLater",
            "value": "<% !empty(saveForLaterBtn.value) %>"
          },
          {
            "outboundPath": "proceed",
            "value": "<% !empty(nextBtn.value) %>"
          }
        ]
      }
    ]
  },
  "include": [
    "OOB.script",
    "Dates.script"
  ],
  "script": "<%
    var toggleWidgetVisible = function(toggle) {
       for (var widget : air.childrenMap) {
           if(widget.getlabel().contains('air'))
               empty(widget.setVisible(toggle));
       }
    }

    var toggleWidgetRequired = function(toggle, widgetsMap) {
        console.info('widgetsMap' + json:asJSON(widgetsMap));
        widgetsMap.setVisible(toggle);
        for (var widget : widgetsMap.childrenMap) {
            widget.setRequired(toggle);
            widget.setVisible(toggle);
        }
    }

    var toggleWidgets = function(widgetsMap, id) {
      if(widgetsMap.childrenMap){
        for (var widget : widgetsMap.childrenMap) {
          if(!empty(widget.childrenMap) &&  !empty(widget.title) && widget.title.lowerCase().contains(id) ){
            widget.setVisible(true);
            for (var subwidget : widget.childrenMap) {
              empty(subwidget.children) ? subwidget.setVisible(true) : '';
              empty(subwidget.children) ? subwidget.setRequired(true) : '';
              empty(subwidget.children) ? subwidget.setEnabled(true) : '';
            }
          }else if(!empty(widget.childrenMap) && !empty(widget.title) && !widget.title.lowerCase().contains(id) ){
            widget.setVisible(false);
            for (var subwidget : widget.childrenMap) {
              empty(subwidget.children) ? subwidget.setVisible(false) : '';
              empty(subwidget.children) ? subwidget.setRequired(false) : '';
              empty(subwidget.children) ? subwidget.setEnabled(false) : '';
            }
          }
        }
      }
    }

  var mapData = function(widgetsMap, indexPos){
      console.info('widgetsMap for index ' + indexPos + ' = ' + json:asJSON(widgetsMap) );
      if(!empty(widgetsMap.childrenMap)){
          for (var widget : widgetsMap.childrenMap) {
              console.info('widget for index ' + indexPos + ' = ' + json:asJSON(widget) );
              if(!empty(widget.childrenMap) &&  !empty(widget.title) && widget.title.lowerCase().contains('air') ){
                  widget.setVisible(true);
                      for (var subwidget : widget.childrenMap) {
                          console.info('subwidget for index ' + indexPos + ' = ' + json:asJSON(subwidget) );
                      }
              }else if(!empty(widget.childrenMap) && !empty(widget.title) && !widget.title.lowerCase().contains('air') ){
              }
          }
      }
      //pageVariables.mapOfTravelData[indexPos].add({'travelDetails': indexPos});
      console.info('pageVariables.mapOfTravelData = ' + pageVariables.mapOfTravelData );
  }


    var getTravelDetails = function (travelWidget){
      var travelPayload = {:};
      console.info('in if statement, travelWidget = ' + json:asJSON(travelWidget));

      //console.info('in loop, values = ' + json:asJSON(values));

      travelPayload.add('panelId',  travelWidget.indexId.value ?: '');
      travelPayload.add('id',  travelWidget.travellerId.value ?: '');
      travelPayload.add('descriptor',  travelWidget.travellerName.value ?: '');
      travelPayload.add('sts',  travelWidget.stsValue.value ?: '');
      travelPayload.add('departureDate',  travelWidget.departureDateDt.value ?: '');
      travelPayload.add('arrivalDate',  travelWidget.arrivalDateDt.value ?: '');
      travelPayload.add('modeOfTransport',  travelWidget.modeOfTransportName.value ?: '');
      travelPayload.add('departurePoint', travelWidget.departureAirportTxt.value ?: '');
      travelPayload.add('arrivalPoint', travelWidget.arrivalAirportTxt.value ?: '');
      travelPayload.add('lodging', '');
      travelPayload.add('firstName', '');
      travelPayload.add('lastName', '');
      travelPayload.add('fromProfile', '');
      travelPayload.add('oobRequest',  '');

      travelPayload.add('airline',  travelWidget.airlineTxt.value ?: '');
      travelPayload.add('busNumber',  travelWidget.busNumberTxt.value ?: '');
      travelPayload.add('assignedVehicle',  travelWidget.yourVehicleRG.value ?: '');
      travelPayload.add('carDetails',  travelWidget.giveCarDetailsTxt.value ?: '');
      travelPayload.add('otherTransport',  travelWidget.modeOfTransportOtherTxt.value ?: '');

      return travelPayload;
    }


    var panelInfo = function(){
      console.info('Enter Panel function');
      console.info('travelPanel = ' + json:asJSON(travelPanel));
      console.info('travelPanel.getPanels() = ' + json:asJSON(travelPanel.getPanels()));

      var travelPayload = {:};
      var travelList = [];

      for(var TravelLodging : travelPanel.getPanels()){
        console.info('Travel and Loding = ' + json:asJSON(TravelLodging));
        console.info('children = ' + json:asJSON(TravelLodging.getChildren()));
            console.info('childrenMap = ' + json:asJSON(TravelLodging.getChildren()[0].childrenMap));
            console.info('childrenMap.stsValue = ' + json:asJSON(TravelLodging.getChildren()[0].childrenMap.stsValue));
        for (var TravelDetails : TravelLodging.getChildren()) {
/*
              if(travelList.find(x => {x.panelId == TravelDetails.indexId})){

            }
*/

          var payload = getTravelDetails(TravelDetails);
              travelList.add(payload);
        }
        console.info('travelList = ' + json:asJSON(travelList));
        travelPayload.add('data',travelList);
            console.info('travelPayload = ' + json:asJSON(travelPayload));
        return travelPayload;
      }
    }

  var getAlltravellers = function(){
      var updateList = [];
      var updateMap = {'data':[]};

      var getAllData = getAccompanyTravllers2.data;
      updateMap.data.add(getAllData);
  return updateMap;
  }

/*
     TODO - Logic for page
     section to wrap everything so i can iterate on the children to save data
     wrap in loop (loop is invisible)
     loop will iterate on logan
     wrap the below in a section
     create two fieldsets (2 field sets within
     within the fields sets is the two panel lists - travel and Lodging
     when storing the accompanying traveller to the OOB request. Can we have multiple panels per accompany traveller?
*/
  %>",
  "onLoad": "<%
   pageVariables.accompanyingTravellers1 = [
    {'body':{'id':'2a8b5c2fcf739006419c28d803490000','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Logan'}, 'status':201},
    {'body':{'id':'2a8b5c2fcf739006419c297190a00000','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Megan'},'status':201},
    {'body':{'id':'2a8b5c2fcf739006419c297190a00001','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Pat'},'status':201}];
   pageVariables.accompanyingTravellers1 = [{'body':{'id':'2a8b5c2fcf739006419c28d803490000','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Logan'}},{'body':{'id':'2a8b5c2fcf739006419c297190a00000','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Megan'}}];
   pageVariables.accompanyingTravellers = !empty(getAccompanyTravllersHardCoded.data) ? getAccompanyTravllersHardCoded.data : [];
   pageVariables.sts = 'This is the STS';
   %>",
  "presentation": {
    "headerSize": "VPS_DEFAULT",
    "pageType": "edit",
    "title": {
      "type": "title",
      "label": "Workday Extend"
    },
    "body": {
      "type": "section",
      "horizontal": false,
      "children": [
        {
          "type": "text",
          "label": "test",
          "id": "testTxt",
          "required": false,
          "enabled": false,
          "value": "<% !empty(getAccompanyTravllers.data) ? json:asJSON(getAccompanyTravllers.data) : 'empty' %>"
        },
        {
          "type": "section",
          "children": [
            {
              "type" : "loop",
              "label": "Loop",
              "on" : "<% pageVariables.accompanyingTravellers %>",
              "as" : "objectToLoopOn",
              "index": "loopIndex",
              "children" : [
                {
                  "type": "section",
                  "children": [
                    {
                      "type": "fieldSet",
                      "collapsible": true,
                      "title": "<% 'Travel Details - ' + (objectToLoopOn.firstName ?? '') + ' ' + (objectToLoopOn.lastName ?? '') %>",
                      "id": "travelFieldSet",
                      "children":[
                        {
                          "type": "panelList",
                          "label": "Travel Events",
                          "id": "travelPanel",
                          "panels": "<% [1] %>",
                          "isArrayOutBinding": true,
                          "panelName": "travelDeatilsPanels",
                          "indexVariableName": "travelPanelIndex",
                          "children": [
                            {
                              "type": "fieldSet",
                              "collapsible": true,
                              "title": "Travel Event Details",
                              "children": [
                            {
                              "type": "text",
                              "id": "indexId",
                              "enabled": false,
                              "value": "<% travelPanelIndex %>"
                            },
                                {
                                  "type": "text",
                                  "id": "travellerName",
                                  "enabled": false,
                                  "value": "<% (objectToLoopOn.firstName ?? '') + ' ' + (objectToLoopOn.lastName ?? '') %>"
                                },
                                {
                                  "type": "text",
                                  "id": "travellerId",
                                  "enabled": false,
                                  "value": "<% !empty(objectToLoopOn.id) ? objectToLoopOn.id : 'no Id' %>"
                                },
                            {
                              "type": "checkBox",
                              "label": "Copy Travel details from previous travller",
                              "id": "copyTravelDetails",
                              "required": false,
                              "enabled": true,
                              "trueLabel": "True Label",
                              "falseLabel": "False Label",
                              "visible": "<% loopIndex!=0 %>",
                              "value": "",
                              "onChange": "<%
                                //TODO - check not empty
                                if(self.value){
                                    panelInfo();
                                        existingTravelDetailsIL.setVisible(true);
                                        existingTravelDetailsIL.setValues(panelInfo().data);

                                }
                              %>"
                            },
                            {
                              "type": "instanceList",
                              "label": "Existing Travelers Details",
                              "id": "existingTravelDetailsIL",
                              "multiSelect": false,
                              "required": false,
                              "enabled": true,
                              "visible": "<% false %>",
                              "values": "<% !empty(panelInfo()) ? panelInfo.data[0] : [] %>",
                              "onChange": "<%

                                           %>"
                            },
                            {
                              "type": "text",
                              "label": "id",
                              "id": "accompanyingTravellerId",
                              "enabled": false,
                              "value": "<%  !empty(objectToLoopOn.id) ? objectToLoopOn.id : 'empty'              %>",
                              "valueOutBinding": "updateAccompanyingTravellers.data[].id"
                            },
                            {
                              "type" : "text",
                              "id": "stsValue",
                              "label": "<% 'Segment Specific STS' %>",
                              "value" : "<% objectToLoopOn.sts %>",
                              "valueOutBinding": "updateAccompanyingTravellers.data[].sts",
                              "onChange": "<%
                                           panelInfo();
                                           %>"
                            },

                            {
                              "type": "date",
                              "label": "Depature Date",
                              "id": "departureDateDt",
                              "required": true,
                              "enabled": true,
                              "value": "<% Dates.getDateTimeNowFormatted() %>",
                              "valueOutBinding": "updateAccompanyingTravellers.data[].departureDate",
                              "onChange": "<%
                                           %>"
                            },
                            {
                              "type": "text",
                              "label": "Departure Time",
                              "id": "departureTimeTxt",
                              "required": true,
                              "enabled": true,
                              "value": ""

                            },
                            {
                              "type": "date",
                              "label": "Arrival Date",
                              "id": "arrivalDateDt",
                              "required": true,
                              "enabled": true,
                              "value": "<% Dates.getDateTimeNowFormatted() %>",
                              "valueOutBinding": "updateAccompanyingTravellers.data[].arrivalDate",
                              "onChange": "<%
                                           %>"
                            },
                            {
                              "type": "text",
                              "label": "Arrival Time",
                              "id": "arrivalTimeTxt",
                              "required": true,
                              "enabled": true,
                              "value": ""
                            },
                            {
                              "type": "instanceList",
                              "label": "Mode of Transport",
                              "id": "modeOfTransportIL",
                              "multiSelect": false,
                              "required": true,
                              "enabled": true,
                              "values": "<% OOB.getModeOfTransport() %>",
                              "onChange": "<%

                                           %>"
                            },
                                    {
                                      "type":"hidden",
                                      "id": "modeOfTransportName",
                                      "value":"",
                                      "valueOutBinding": "updateAccompanyingTravellers.data[].modeOfTransport"
                                    },
                                    {
                                      "type": "text",
                                      "label": "Departure Airport",
                                      "id": "<% 'departureAirportTxt' %>",
                                      "required": false,
                                      "enabled": true,
                                      "value": "",
                                      "valueOutBinding": "updateAccompanyingTravellers.data[].departurePoint"
                                    },
                                    {
                                      "type": "text",
                                      "label": "Arrival Airport",
                                      "id": "arrivalAirportTxt",
                                      "required": false,
                                      "enabled": true,
                                      "value": "",
                                      "valueOutBinding": "updateAccompanyingTravellers.data[].arrivalPoint"
                                    },
                                    {
                                      "type": "text",
                                      "label": "Airline",
                                      "id": "airlineTxt",
                                      "required": false,
                                      "enabled": true,
                                      "value": "",
                                      "_test": "<%/*TODO no object to save field*/%>"

                                    }

                              ,
                            {
                              "type": "radioGroup",
                              "label": "Is this your assigned vehicle?",
                              "id": "yourVehicleRG",
                              "required": false,
                              "enabled": true,
                              "instanceList": [
                                {
                                  "id": "yes",
                                  "descriptor": "Yes"
                                },
                                {
                                  "id": "no",
                                  "descriptor": "No"
                                }
                              ]
                            },

                            {
                              "type": "text",
                              "label": "Give car details",
                              "id": "giveCarDetailsTxt",
                              "required": false,
                              "enabled": true,
                              "_test": "<%/*TODO no object to save field*/%>"

                            },

                            {
                              "type": "text",
                              "label": "Bus Number",
                              "id": "busNumberTxt",
                              "required": false,
                              "enabled": true,
                              "value": "",
                              "_test": "<%/*TODO no object to save field*/%>"
                            },
                            {
                              "type": "text",
                              "label": "TestField",
                              "id": "testFieldTxt",
                              "required": false,
                              "enabled": true,
                              "value": "",
                              "_test": "<%/*TODO no object to save field*/%>"
                            },

                            {
                              "type": "text",
                              "label": "Departure Station",
                              "id": "departureStationTxt",
                              "required": false,
                              "enabled": true,
                              "value": "",
                              "_valueOutBinding": "updateAccompanyingTravellers.data[].departurePoint"
                            },
                            {
                              "type": "text",
                              "label": "Arrival Station",
                              "id": "arrivalStationTxt",
                              "required": false,
                              "enabled": true,
                              "value": "",
                              "_valueOutBinding": "updateAccompanyingTravellers.data[].arrivalPoint"

                            },

                            {
                              "type": "text",
                              "label": "TestBoat",
                              "id": "testBoatTxt",
                              "required": false,
                              "enabled": true,
                              "value": "",
                              "_test": "<%/*TODO no object to save field*/%>"
                            },
                            {
                              "type": "text",
                              "label": "Departure location",
                              "id": "<% 'departureAirportTxt' %>",
                              "required": false,
                              "enabled": true,
                              "value": "",
                              "_valueOutBinding": "updateAccompanyingTravellers.data[].departurePoint"
                            },
                            {
                              "type": "text",
                              "label": "Arrival location",
                              "id": "arrivalAirportTxt",
                              "required": false,
                              "enabled": true,
                              "value": "",
                              "_valueOutBinding": "updateAccompanyingTravellers.data[].arrivalPoint"

                            },

                            {
                              "type": "text",
                              "label": "Mode Of Transport Other",
                              "id": "modeOfTransportOtherTxt",
                              "required": false,
                              "enabled": true,
                              "value": "",
                              "_test": "<%/*TODO no object to save field*/%>"
                            },
                            {
                              "type": "checkBox",
                              "label": "Add this location to my frequent destination list",
                              "id": "addToFrequentTravels",
                              "required": false,
                              "enabled": true,
                              "trueLabel": "True Label",
                              "falseLabel": "False Label",
                              "value": ""
                            }
                            ]
                          }

                          ]
                        }
                      ]
                    },
                    {
                      "type": "fieldSet",
                      "id": "lodgingFieldSet",
                      "collapsible": true,
                      "title": "<% 'Lodging Details - ' + (objectToLoopOn.body.firstName ?? '') + ' ' + (objectToLoopOn.body.lastName ?? '')%>",
                      "children": [
                        {
                          "type": "panelList",
                          "label": "Lodging Events",
                          "id": "LodgingPanel",
                          "panels": "<% [1] %>",
                          "panelName": "lodgingDetailsPanels",
                          "indexVariableName": "travelPanelIndex",
                          "children" : [
                            {
                              "type":"fieldSet",
                              "id": "LodgingDetails",
                              "title": "<% 'Lodging Details'%>",
                              "collapsible": true,
                              "children": [
                                {
                                  "type": "section",
                                  "columnWidthRatios": [0.5,0.5],
                                  "horizontal": true,
                                  "children": [
                                    {
                                      "type": "date",
                                      "label": "Start Date",
                                      "id": "lodgingStartDateDt",
                                      "required": true,
                                      "enabled": true,
                                      "value": "<% date:now().format('yyyy-MM-dd') %>",
                                      "valueOutBinding": "createDestinations.data[].startDate"
                                    },
                                    {
                                      "type": "date",
                                      "label": "End Date",
                                      "id": "lodgingEndDateDt",
                                      "required": true,
                                      "enabled": true,
                                      "value": "<% date:now().format('yyyy-MM-dd') %>",
                                      "valueOutBinding": "createDestinations.data[].endDate"
                                    }
                                  ]
                                },
                                {
                                  "type": "instanceList",
                                  "label": "Lodging/Destination Name",
                                  "id": "lodgingIL",
                                  "multiSelect": false,
                                  "required": true,
                                  "enabled": true,
                                  "values": "<% !empty(getLodging.data[0])? getLodging.data.add({'id': 'other', 'descriptor': 'Other'}) : [] %>",
                                  "onChange": "<%
                                               if(empty(self.selectedEntries[0])){
                                                   lodgingOtherTxt.value = '';
                                                       //lodgingOtherTxt.setVisible(false);
                                                       lodgingOtherTxt.setRequired(false);
                                               }else if(self.selectedEntries[0].id == 'other'){
                                                   lodgingOtherTxt.value = '';
                                                       //lodgingOtherTxt.setVisible(true);
                                                       lodgingOtherTxt.setRequired(true);
                                               }else{
                                                   lodgingOtherTxt.value = self.selectedEntries[0].descriptor;
                                                       //lodgingOtherTxt.setVisible(false);
                                                       lodgingOtherTxt.setRequired(false);
                                               }
                                               %>"
                                },
                                {
                                  "type": "text",
                                  "label": "Lodging Name",
                                  "id": "lodgingOtherTxt",
                                  "required": false,
                                  "enabled": false,
                                  "visible": true,
                                  "valueOutBinding": "createDestinations.data[].name"
                                },
                                {
                                  "type": "instanceList",
                                  "label": "Country",
                                  "id": "countryIl",
                                  "multiSelect": false,
                                  "required": true,
                                  "enabled": true,
                                  "visible": true,
                                  "searchEndPoint": "<% endpoints.getCountrySearch %>",
                                  "searchResultValues": "<% !empty(getCountrySearch.data) ? getCountrySearch.data : [] %>",
                                  "values": "<% !empty(getCountrySearch.data) ? getCountrySearch.data : [] %>",
                                  "onChange": "<%
                                               if(empty(self.selectedEntries[0])){
                                                   countryText.value = '';
                                                       countryCodeText.value = '';
                                               }else{
                                                   countryText.value = self.selectedEntries[0].descriptor;
                                                       countryCodeText.value = self.selectedEntries[0].id;
                                               }
                                               %>"
                                },
                                {
                                  "type":"hidden",
                                  "id": "countryText",
                                  "value": ""
                                },
                                {
                                  "type":"text",
                                  "id": "countryCodeText",
                                  "label": "Country Code",
                                  "enabled": false,
                                  "value": "",
                                  "valueOutBinding": "createDestinations.data[].countryCode"
                                },
                                {
                                  "type": "text",
                                  "label": "Address Line 1",
                                  "id": "addressLine1Txt",
                                  "required": true,
                                  "enabled": true,
                                  "value": "",
                                  "valueOutBinding": "createDestinations.data[].addressLine1"
                                },
                                {
                                  "type": "text",
                                  "label": "Address Line 2",
                                  "id": "addressLine2Txt",
                                  "required": false,
                                  "enabled": true,
                                  "value": "",
                                  "valueOutBinding": "createDestinations.data[].addressLine2"
                                },
                                {
                                  "type": "text",
                                  "label": "Address Line 3",
                                  "id": "addressLine3Txt",
                                  "required": false,
                                  "enabled": true,
                                  "value": "",
                                  "valueOutBinding": "createDestinations.data[].addressLine3"
                                },
                                {
                                  "type": "instanceList",
                                  "label": "City",
                                  "id": "cityIl",
                                  "required": true,
                                  "enabled": true,
                                  "visible": true,
                                  "idKey": "workdayID",
                                  "displayKey": "descriptor",
                                  "searchEndPoint": "<% endpoints.getCitiesSearch %>",
                                  "searchResultValues": "<% !empty(getCitiesSearch.data) ? getCitiesSearch.data : [] %>",
                                  "values": "<% !empty(getCitiesSearch.data) ? getCitiesSearch.data : [] %>",
                                  "selectedValuesAndDescriptors":"<% [] %>",
                                  "onChange": "<% empty(self.selectedEntries[0]) ? cityText.value = '' : cityText.value = self.selectedEntries[0].descriptor %>"
                                },
                                {
                                  "type":"hidden",
                                  "id": "cityText",
                                  "value": "",
                                  "valueOutBinding": "createDestinations.data[].city"
                                },
                                {
                                  "type": "instanceList",
                                  "label": "State/Province/County",
                                  "id": "stateIl",
                                  "required": "<% false %>",
                                  "enabled": true,
                                  "values": "<% !empty(getStates.data) ? getStates.data : []  %>",
                                  "visible": "<% true %>",
                                  "onChange": "<% empty(self.selectedEntries[0]) ? (stateText.value = '') : (stateText.value = self.selectedEntries[0].descriptor) %>"
                                },
                                {
                                  "type":"hidden",
                                  "id": "stateText",
                                  "value": "",
                                  "valueOutBinding": "createDestinations.data[].state"
                                },
                                {
                                  "type": "text",
                                  "label": "Postal Code",
                                  "id": "postalCodeTxt",
                                  "required": false,
                                  "enabled": true,
                                  "value": "",
                                  "valueOutBinding": "createDestinations.data[].postalCode"
                                },
                                {
                                  "type": "text",
                                  "label": "Contact Number of Destination",
                                  "id": "contactNumberOfDestinationTxt",
                                  "required": false,
                                  "enabled": true,
                                  "value": "",
                                  "valueOutBinding": "createDestinations.data[].contactNumber"
                                },
                                {
                                  "type": "checkBox",
                                  "label": "Add this location to my frequent destination list",
                                  "id": "freqDestChbx",
                                  "required": false,
                                  "enabled": true,
                                  "trueLabel": "True Label",
                                  "falseLabel": "False Label",
                                  "value": ""
                                }
                              ]
                            }




                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "editButtonBar",
          "editButtons": [
            {
              "type": "editButton",
              "label": "<% 'Next' %>",
              "buttonType": "PRIMARY",
              "sortOrder": "a",
              "id": "nextBtn"
            },
            {
              "type": "editButton",
              "label": "<% 'Save For Later' %>",
              "id": "saveForLaterBtn",
              "sortOrder": "b",
              "buttonType": "AUXILIARY"
            }
          ]
        }
      ]
    }
  }
}