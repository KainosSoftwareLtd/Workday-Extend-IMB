{
  "id": "createOOBRequest-b-TravelLodgingDetails",
  "endPoints": [
    {
      "name": "getLodging",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + ('SELECT workdayID as id, Destination, name AS descriptor FROM outOfBed_sykqld_destinations ORDER BY createdMoment DESC').urlEncode() %>",
      "authType": "sso"
    },
    {
      "name": "getCountrySearch",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + ('SELECT workdayID, countryName AS descriptor, alpha_3Code AS id FROM countries WHERE countryName CONTAINS \"' + instanceListQuery.replace('+',' ') + '\"').urlEncode() %>",
      "authType": "wcpisu",
      "exclude": "<% empty instanceListQuery %>",
      "deferred": true
    },
    {
      "name": "getCitiesSearch",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + ('SELECT workdayID, travelCity, travelCityName as descriptor, inactive FROM travelCities WHERE inactive = false AND travelCityName CONTAINS \"' + instanceListQuery.replace('+',' ') + '\" ORDER BY travelCityName ASC, country ASC').urlEncode() %>",
      "authType": "wcpisu",
      "exclude": "<% empty instanceListQuery %>",
      "deferred": true
    },
    {
      "name": "getCountriesSearch",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + ('SELECT country FROM countries WHERE countryName contains \\''+ instanceListQuery +'\\'').urlEncode() %>",
      "authType": "wcpisu",
      "deferred": true,
      "exclude": "<% empty instanceListQuery %>"
    },
    {
      "name": "getStates",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% '/data?query=' + OOB.getStates() %>",
      "authType": "sso"
    }
  ],
  "outboundData": {
    "outboundEndPoints": [
      {
        "_generationNote": "Creates a single instance, as specified by of the OOBProfile business object resource.",
        "name": "createDestinations",
        "url": "<% `https://api.workday.com/apps/outOfBed_sykqld/v1/destinations?bulk=true` %>",
        "authType": "sso",
        "httpMethod": "POST",
        "_onSend": "<% %>",
        "failOnStatusCodes": [{"code":400},{"code":403}]
      },
      {
        "_generationNote": "Creates a single instance, as specified by of the OOBProfile business object resource.",
        "name": "updateAccompanyingTravellers",
        "url": "<% `https://api.workday.com/apps/outOfBed_sykqld/v1/accompanyingTravellers?bulk=true` %>",
        "authType": "sso",
        "httpMethod": "PATCH",
        "_onSend": "<%console.info('update accompany Travellers' + json:asJSON(self.data)) %>",
        "failOnStatusCodes": [{"code":400},{"code":403}]
      },
      {
        "_generationNote": "Creates a single instance, as specified by of the OOBProfile business object resource.",
        "name": "mapAccompanyingTravellers",
        "url": "<% `https://api.workday.com/apps/outOfBed_sykqld/v1/accompanyingTravellers?bulk=true` %>",
        "authType": "sso",
        "httpMethod": "PATCH",
        "failOnStatusCodes": [{"code":400},{"code":403}],
        "onSend": "<%
          var updateList = [];
          var updateMap = {:};
          var destinationList = createDestinations.data.map(x=> {{'id' : x.body.id}});
          var accTravellerList = updateAccompanyingTravellers.data.map(x=> {{'id' : x.body.id}});

          console.info('createDestinations.data' + json:asJSON(createDestinations.data));
          console.info('updateAccompanyingTravellers.data' + json:asJSON(updateAccompanyingTravellers.data));
          console.info('destinationList = ' + destinationList);
          console.info('accTravellerList = ' + accTravellerList);

          var counter = 0;
        for(var x : accTravellerList){
          updateList.add({'id' : x.id, 'lodging':destinationList[counter]});
            counter += 1;
        }
          updateMap.add('data', updateList);
        console.info('map = ' + json:asJSON(updateMap));
                   %>"
      },
      {
        "name": "transitionOutboundVars",
        "type": "outboundVariable",
        "variableScope": "flow",
        "values": [
          {
            "outboundPath": "saveForLater",
            "value": "<% !empty(saveForLaterBtn.value) %>"
          },
          {
            "outboundPath": "proceed",
            "value": "<% !empty(nextBtn.value) %>"
          }
        ]
      }
    ]
  },
  "include": [
    "OOB.script",
    "Dates.script"
  ],
  "script": "<%
  /*
    var toggleWidgetVisible = function(toggle) {
       for (var widget : air.childrenMap) {
           if(widget.getlabel().contains('air'))
               empty(widget.setVisible(toggle));
       }
    }

    var toggleWidgetRequired = function(toggle, widgetsMap) {
        console.info('widgetsMap' + json:asJSON(widgetsMap));
        widgetsMap.setVisible(toggle);
        for (var widget : widgetsMap.childrenMap) {
            widget.setRequired(toggle);
            widget.setVisible(toggle);
        }
    }

    var toggleWidgets = function(widgetsMap, id) {
      if(widgetsMap.childrenMap){
        for (var widget : widgetsMap.childrenMap) {
          if(!empty(widget.childrenMap) &&  !empty(widget.title) && widget.title.lowerCase().contains(id) ){
            widget.setVisible(true);
            for (var subwidget : widget.childrenMap) {
              empty(subwidget.children) ? subwidget.setVisible(true) : '';
              empty(subwidget.children) ? subwidget.setRequired(true) : '';
              empty(subwidget.children) ? subwidget.setEnabled(true) : '';
            }
          }else if(!empty(widget.childrenMap) && !empty(widget.title) && !widget.title.lowerCase().contains(id) ){
            widget.setVisible(false);
            for (var subwidget : widget.childrenMap) {
              empty(subwidget.children) ? subwidget.setVisible(false) : '';
              empty(subwidget.children) ? subwidget.setRequired(false) : '';
              empty(subwidget.children) ? subwidget.setEnabled(false) : '';
            }
          }
        }
      }
    }

  var mapData = function(widgetsMap, indexPos){
      console.info('widgetsMap for index ' + indexPos + ' = ' + json:asJSON(widgetsMap) );
      if(!empty(widgetsMap.childrenMap)){
          for (var widget : widgetsMap.childrenMap) {
              console.info('widget for index ' + indexPos + ' = ' + json:asJSON(widget) );
              if(!empty(widget.childrenMap) &&  !empty(widget.title) && widget.title.lowerCase().contains('air') ){
                  widget.setVisible(true);
                      for (var subwidget : widget.childrenMap) {
                          console.info('subwidget for index ' + indexPos + ' = ' + json:asJSON(subwidget) );
                      }
              }else if(!empty(widget.childrenMap) && !empty(widget.title) && !widget.title.lowerCase().contains('air') ){


              }
          }
      }
      //pageVariables.mapOfTravelData[indexPos].add({'travelDetails': indexPos});
      console.info('pageVariables.mapOfTravelData = ' + pageVariables.mapOfTravelData );
  }
  */
/*
  var panelInfo = function(){
  console.info('Enter Panel function');
  console.info('travelPanel = ' + json:asJSON(travelPanel));

  var travelList = [];

    for(var q : travelPanel.getPanels()){
        console.info('panels = ' + travelPanel.getPanels());
        if(empty q.getChildren()[0].value){
            var questionDetails = getTravelPayload(q);
             travelList.add(questionDetails);
        }else{
            console.info('value is not empty');
        }
        console.info('travelList = ' + travelList);
    }
  }
  */
/*
    var getTravelPayload = function(quest){
        var travelDetailMap = {:};
            travelDetailMap.add('id', quest.getChildren()[0].value);
        var questionBody = quest.getChildren()[1].value;
        travelDetailMap.add('questionBody', questionBody);
        return travelDetailMap;
    }
*/
  %>",
  "onLoad": "<%
             pageVariables.accompanyingTravellers = [{'body':{'id':'2a8b5c2fcf739006419c28d803490000','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Logan'},'status':201},{'body':{'id':'2a8b5c2fcf739006419c297190a00000','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Megan'},'status':201},{'body':{'id':'2a8b5c2fcf739006419c297190a00001','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Pat'},'status':201}];
             pageVariables.accompanyingTravellers1 = [{'body':{'id':'2a8b5c2fcf739006419c28d803490000','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Logan'}},{'body':{'id':'2a8b5c2fcf739006419c297190a00000','descriptor':'Accompanying Travellers','lastName':'McNeil','fromProfile':false,'firstName':'Megan'}}];
             pageVariables.sts = 'This is the STS';
             pageVariables.mapOfTravelData = [];

             pageVariables.sts = [];
             pageVariables.departureDate = [];
             pageVariables.arrivalDate = [];
             pageVariables.modeOfTransport = [];
             pageVariables.carAssigned = [];
             pageVariables.carDetails = [];
             pageVariables.airline = [];
             pageVariables.busNumber = [];
             pageVariables.departureLocation = [];
             pageVariables.arrivalLocation = [];
             pageVariables.other = [];


             %>",
  "presentation": {
    "headerSize": "VPS_DEFAULT",
    "pageType": "edit",
    "title": {
      "type": "title",
      "label": "Workday Extend"
    },
    "body": {
      "type": "section",
      "horizontal": false,
      "children": [
        {
          "type": "fieldSet",
          "title": "Travel and Lodging Information",
          "children": [
            {
              "type": "text",
              "label": "accompanyingTravellers",
              "id": "accompanyingTravellersTxt",
              "required": false,
              "enabled": false,
              "value": "<%!empty(pageVariables.accompanyingTravellers) ? json:asJSON(pageVariables.accompanyingTravellers) : 'Empty' %>"
            },
            {
              "type": "panelList",
              "label": "Expense Items",
              "id": "travelPanel",
              "panels": "<% pageVariables.accompanyingTravellers %>",
              "panelName": "travelAndLodging",
              "indexVariableName": "loopIndex",
              "children" : [
                {
                  "type": "fieldSet",
                  "id": "TravelDetails",
                  "title": "<% 'Travel Details - '+ (objectToLoopOn.body.firstName ?? '') + ' ' + (objectToLoopOn.body.lastName ?? '')%>",
                  "collapsible": true,
                  "children": [
                    {
                      "type": "text",
                      "id": "indexId",
                      "enabled": false,
                      "value": "<% loopIndex %>"
                    },
                    {
                      "type": "checkBox",
                      "label": "Copy Travel details from previous travller",
                      "id": "copyTravelDetails",
                      "required": false,
                      "enabled": true,
                      "trueLabel": "True Label",
                      "falseLabel": "False Label",
                      "visible": "<% loopIndex!=0 %>",
                      "value": "",
                      "onChange":"<%
                      //TODO - check not empty
                      if(self.value){
                        //console.info('Full list = ' + json:asJSON(pageVariables.sts));
                        var postion = string:toInt(indexId.value) -1;
                        stsValue.setValue(pageVariables.sts[postion]);
                        depatureDateDt.setValue(pageVariables.departureDate[postion]);
                        arrivalDateDt.setValue(pageVariables.arrivalDate[postion]);
                        modeOfTransportIL.setValue([pageVariables.modeOfTransport[postion].id]);
                        modeOfTransportName.setValue(pageVariables.modeOfTransport[postion].descriptor);

                        if(!empty(pageVariables.modeOfTransport[postion].id)){
                          toggleWidgets(TravelDetails, pageVariables.modeOfTransport[postion].id )
                        }else{
                          toggleWidgets(TravelDetails, 'hide');
                          modeOfTransportName.value = '';
                        }

                        if(pageVariables.modeOfTransport[postion].id == 'air'){
                          departureAirportTxt.setValue(pageVariables.departureLocation[postion]);
                          arrivalAirportTxt.setValue(pageVariables.arrivalLocation[postion]);
                          airlineTxt.setValue(pageVariables.airline[postion]);
                          departureStationTxt.setValue('');
                          yourVehicleRG.setValue(null);
                          giveCarDetailsTxt.setValue('');
                          busNumberTxt.setValue('');
                        }else if(pageVariables.modeOfTransport[postion].id == 'train'){
                          departureStationTxt.setValue(pageVariables.departureLocation[postion]);
                          departureAirportTxt.setValue('');
                          arrivalAirportTxt.setValue('');
                          airlineTxt.setValue('');
                          yourVehicleRG.setValue(null);
                          giveCarDetailsTxt.setValue('');
                          busNumberTxt.setValue('');
                        }else if(pageVariables.modeOfTransport[postion].id == 'car'){
                          yourVehicleRG.setValue([pageVariables.carAssigned[postion]]);
                          giveCarDetailsTxt.setVisible(true);
                          giveCarDetailsTxt.setValue(pageVariables.carDetails[postion]);
                          departureAirportTxt.setValue('');
                          arrivalAirportTxt.setValue('');
                          airlineTxt.setValue('');
                          departureStationTxt.setValue('');
                          busNumberTxt.setValue('');
                        }else if(pageVariables.modeOfTransport[postion].id == 'bus'){
                          busNumberTxt.setValue(pageVariables.busNumber[postion]);
                          departureAirportTxt.setValue('');
                          arrivalAirportTxt.setValue('');
                          airlineTxt.setValue('');
                          departureStationTxt.setValue('');
                          yourVehicleRG.setValue(null);
                          giveCarDetailsTxt.setValue('');
                        }else{
                          departureAirportTxt.setValue('');
                          arrivalAirportTxt.setValue('');
                          airlineTxt.setValue('');
                          departureStationTxt.setValue('');
                          yourVehicleRG.setValue(null);
                          giveCarDetailsTxt.setValue('');
                          busNumberTxt.setValue('');
                        }
                      }else{
                          departureAirportTxt.setValue('');
                          arrivalAirportTxt.setValue('');
                          airlineTxt.setValue('');
                          departureStationTxt.setValue('');
                          yourVehicleRG.setValue(null);
                          giveCarDetailsTxt.setValue('');
                          busNumberTxt.setValue('');
                          toggleWidgets(TravelDetails, 'hide');
                          modeOfTransportName.value = '';
                          giveCarDetailsTxt.setVisible(false);
                      }
                      %>"
                    },
                    {
                      "type": "text",
                      "label": "id",
                      "id": "accompanyingTravellerId",
                      "enabled": false,
                      "value": "<%  !empty(objectToLoopOn.body.id) ? objectToLoopOn.body.id : 'empty'              %>",
                      "valueOutBinding": "updateAccompanyingTravellers.data[].id"
                    },
                    {
                      "type": "hidden",
                      "id": "initialiseLists",
                      "value": "<%
                                if(empty(pageVariables.sts) || empty(pageVariables.sts[loopIndex])){
                                pageVariables.sts.add(' ');
                                pageVariables.departureDate.add(' ');
                                pageVariables.arrivalDate.add(' ');
                                pageVariables.modeOfTransport.add(' ');
                                pageVariables.departureLocation.add(' ');
                                pageVariables.arrivalLocation.add(' ');
                                pageVariables.airline.add(' ');
                                pageVariables.carAssigned.add(' ');
                                pageVariables.carDetails.add(' ');
                                pageVariables.busNumber.add(' ');
                                pageVariables.other = [];
                                } else{
                                  pageVariables.sts[loopIndex].set(loopIndex, accompanyingTravellerId.value);
                                  pageVariables.departureDate[loopIndex].set(loopIndex, accompanyingTravellerId.value);
                                  pageVariables.arrivalDate[loopIndex].set(loopIndex, accompanyingTravellerId.value);
                                  pageVariables.modeOfTransport[loopIndex].set(loopIndex, accompanyingTravellerId.value);
                                  pageVariables.departureLocation[loopIndex].set(loopIndex, accompanyingTravellerId.value);
                                  pageVariables.arrivalLocation[loopIndex].set(loopIndex, accompanyingTravellerId.value);
                                }
                                //console.info('Initialise the lists = ' + json:asJSON(pageVariables.sts));
                                %>"
                    },
                    {
                      "type" : "text",
                      "id": "stsValue",
                      "label": "<% 'Segment Specific STS' %>",
                      "value" : "<% pageVariables.sts %>",
                      "valueOutBinding": "updateAccompanyingTravellers.data[].sts",
                      "onChange": "<%
                        //var position = string:toInt(indexId.value)
                         //          if(!empty(pageVariables.sts)){
                        //               pageVariables.sts.set(position, self.value);
                         //          }
                                   //console.info('sts change list = ' + pageVariables.sts);
                        panelInfo();
                                   %>"
                    },
                    {
                      "type": "section",
                      "columnWidthRatios": [0.2,0.8],
                      "horizontal": true,
                      "children": [
                        {
                          "type": "date",
                          "label": "Depature Date",
                          "id": "depatureDateDt",
                          "required": true,
                          "enabled": true,
                          "value": "<% Dates.getDateTimeNowFormatted() %>",
                          "valueOutBinding": "updateAccompanyingTravellers.data[].departureDate",
                          "onChange": "<%
                             var position = string:toInt(indexId.value)
                               if(!empty(pageVariables.departureDate)){
                                   console.info('date object = ' + json:asJSON(self.value));
                                 pageVariables.departureDate.set(position, self.value);
                               }
                             console.info('departureDate list = ' + pageVariables.departureDate);
                           %>"
                        },
                        {
                          "type": "text",
                          "label": "Departure Time",
                          "id": "departureTimeTxt",
                          "required": true,
                          "enabled": true,
                          "value": ""
                        }
                      ]
                    },
                    {
                      "type": "fieldSet",
                      "horizontal": true,
                      "children": [
                        {
                          "type": "date",
                          "label": "Arrival Date",
                          "id": "arrivalDateDt",
                          "required": true,
                          "enabled": true,
                          "value": "<% Dates.getDateTimeNowFormatted() %>",
                          "valueOutBinding": "updateAccompanyingTravellers.data[].arrivalDate",
                          "onChange": "<%
                           var position = string:toInt(indexId.value)
                           if(!empty(pageVariables.arrivalDate) && !empty(pageVariables.arrivalDate[position])){
                               pageVariables.arrivalDate.set(position, string:toString(self.value.format('yyyy-MM-dd')));
                           }
                           console.info('arrivalDate list = ' + pageVariables.arrivalDate);
                           %>"
                        },
                        {
                          "type": "text",
                          "label": "Arrival Time",
                          "id": "arrivalTimeTxt",
                          "required": true,
                          "enabled": true,
                          "value": ""
                        }
                      ]
                    },
                    {
                      "type": "instanceList",
                      "label": "Mode of Transport",
                      "id": "modeOfTransportIL",
                      "multiSelect": false,
                      "required": true,
                      "enabled": true,
                      "values": "<% OOB.getModeOfTransport() %>",
                      "onChange": "<%
                        if(!empty(self.selectedEntries[0].id)){
                          toggleWidgets(TravelDetails, self.selectedEntries[0].id);
                          modeOfTransportName.value = self.selectedEntries[0].descriptor;
                        }
                        else{
                          toggleWidgets(TravelDetails, 'hide');
                          modeOfTransportName.value = '';
                        }

                        var position = string:toInt(indexId.value)
                        if(!empty(pageVariables.modeOfTransport) && !empty(pageVariables.modeOfTransport[position]) && !empty(self.selectedEntries[0].id)){
                            pageVariables.modeOfTransport.set(position, self.selectedEntries[0]);
                        }
                        console.info('modeOfTransport list = ' + pageVariables.modeOfTransport);

                      %>"
                    },
                    {
                      "type":"hidden",
                      "id": "modeOfTransportName",
                      "value":"",
                      "valueOutBinding": "updateAccompanyingTravellers.data[].modeOfTransport"
                    },
                    {
                      "type": "fieldSet",
                      "id": "air",
                      "title": "Air",
                      "label": "Air",
                      "visible": false,
                      "children":[
                        {
                          "type": "text",
                          "label": "Departure Airport",
                          "id": "<% 'departureAirportTxt' %>",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "valueOutBinding": "updateAccompanyingTravellers.data[].departurePoint",
                          "onChange":"<%
                            var position = string:toInt(indexId.value)
                            if(!empty(pageVariables.departureLocation) && !empty(pageVariables.departureLocation[position])){
                                pageVariables.departureLocation.set(position, self.value);
                            }
                            console.info('departureLocation list = ' + pageVariables.departureLocation);
                          %>"
                        },
                        {
                          "type": "text",
                          "label": "Arrival Airport",
                          "id": "arrivalAirportTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "valueOutBinding": "updateAccompanyingTravellers.data[].arrivalPoint",
                          "onChange":"<%
                            var position = string:toInt(indexId.value)
                            if(!empty(pageVariables.arrivalLocation) && !empty(pageVariables.arrivalLocation[position])){
                                pageVariables.arrivalLocation.set(position, self.value);
                            }
                            console.info('arrivalLocation list = ' + pageVariables.arrivalLocation);
                          %>"
                        },
                        {
                          "type": "text",
                          "label": "Airline",
                          "id": "airlineTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "_test": "<%/*TODO no object to save field*/%>",
                          "onChange":"<%
                            var position = string:toInt(indexId.value)
                            if(!empty(pageVariables.airline) && !empty(pageVariables.airline[position])){
                              pageVariables.airline.set(position, self.value);
                            }
                            console.info('airline list = ' + pageVariables.airline);
                          %>"
                        }
                      ]
                    },
                    {
                      "type": "fieldSet",
                      "id": "car",
                      "title": "Car",
                      "visible": false,
                      "children":[
                        {
                          "type": "radioGroup",
                          "label": "Is this your assigned vehicle?",
                          "id": "yourVehicleRG",
                          "required": false,
                          "enabled": true,
                          "instanceList": [
                            {
                              "id": "yes",
                              "descriptor": "Yes"
                            },
                            {
                              "id": "no",
                              "descriptor": "No"
                            }
                          ],
                          "onChange": "<%
                           var position = string:toInt(indexId.value)
                           if(!empty(pageVariables.carAssigned) && !empty(pageVariables.carAssigned[position])){
                               pageVariables.carAssigned.set(position, self.value);
                           }
                           console.info('carAssigned list = ' + pageVariables.carAssigned);

                            if(self.value == ['yes']){
                                carDetailsFS.setVisible(true);
                                    giveCarDetailsTxt.setRequired(true);
                            }
                            else{
                                carDetailsFS.setVisible(false);
                                    giveCarDetailsTxt.setRequired(false);
                            }
                          %>"
                        },
                        {
                          "type": "fieldSet",
                          "id": "carDetailsFS",
                          "visible": false,
                          "children": [
                            {
                              "type": "text",
                              "label": "Give car details",
                              "id": "giveCarDetailsTxt",
                              "required": false,
                              "enabled": true,
                              "_test": "<%/*TODO no object to save field*/%>",
                              "onChange":"<%
                                var position = string:toInt(indexId.value)
                                if(!empty(pageVariables.carDetails) && !empty(pageVariables.carDetails[position])){
                                    pageVariables.carDetails.set(position, self.value);
                                }
                                console.info('carDetails list = ' + pageVariables.carDetails);
                              %>"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "fieldSet",
                      "id": "bus",
                      "title": "Bus",
                      "visible": false,
                      "children":[
                        {
                          "type": "text",
                          "label": "Bus Number",
                          "id": "busNumberTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "_test": "<%/*TODO no object to save field*/%>"
                        }
                      ]
                    },
                    {
                      "type": "fieldSet",
                      "id": "train",
                      "title": "Train",
                      "visible": false,
                      "children":[
                        {
                          "type": "text",
                          "label": "TestField",
                          "id": "testFieldTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "_test": "<%/*TODO no object to save field*/%>"
                        }
                      ]
                    },
                    {
                      "type": "fieldSet",
                      "id": "busOrTrain",
                      "title": "Bus or Train",
                      "visible": false,
                      "children": [
                        {
                          "type": "text",
                          "label": "Departure Station",
                          "id": "departureStationTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "valueOutBinding": "updateAccompanyingTravellers.data[].departurePoint",
                          "onChange":"<%
                                      var position = string:toInt(indexId.value)
                                      if(!empty(pageVariables.departureLocation) && !empty(pageVariables.departureLocation[position])){
                                          pageVariables.departureLocation.set(position, self.value);
                                      }
                                      console.info('departureLocation list = ' + pageVariables.departureLocation);
                                      %>"
                        },
                        {
                          "type": "text",
                          "label": "Arrival Station",
                          "id": "arrivalStationTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "valueOutBinding": "updateAccompanyingTravellers.data[].arrivalPoint",
                          "onChange":"<%
                                      var position = string:toInt(indexId.value)
                                      if(!empty(pageVariables.arrivalLocation) && !empty(pageVariables.arrivalLocation[position])){
                                          pageVariables.arrivalLocation.set(position, self.value);
                                      }
                                      console.info('arrivalLocation list = ' + pageVariables.arrivalLocation);
                                      %>"
                        }
                      ]
                    },
                    {
                      "type": "fieldSet",
                      "id": "boat",
                      "title": "Boat",
                      "visible": false,
                      "children":[
                        {
                          "type": "text",
                          "label": "TestBoat",
                          "id": "testBoatTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "_test": "<%/*TODO no object to save field*/%>"
                        },
                        {
                          "type": "text",
                          "label": "Departure location",
                          "id": "<% 'departureAirportTxt' %>",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "valueOutBinding": "updateAccompanyingTravellers.data[].departurePoint",
                          "onChange":"<%
                                      var position = string:toInt(indexId.value)
                                      if(!empty(pageVariables.departureLocation) && !empty(pageVariables.departureLocation[position])){
                                          pageVariables.departureLocation.set(position, self.value);
                                      }
                                      console.info('departureLocation list = ' + pageVariables.departureLocation);
                                      %>"
                        },
                        {
                          "type": "text",
                          "label": "Arrival location",
                          "id": "arrivalAirportTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "valueOutBinding": "updateAccompanyingTravellers.data[].arrivalPoint",
                          "onChange":"<%
                          var position = string:toInt(indexId.value)
                          if(!empty(pageVariables.arrivalLocation) && !empty(pageVariables.arrivalLocation[position])){
                              pageVariables.sts.arrivalLocation.set(position, self.value);
                          }
                          console.info('arrivalLocation list = ' + pageVariables.arrivalLocation);
                          %>"
                        }
                      ]
                    },
                    {
                      "type": "fieldSet",
                      "id": "other",
                      "title": "Other",
                      "visible": false,
                      "children":[
                        {
                          "type": "text",
                          "label": "Mode Of Transport Other",
                          "id": "modeOfTransportOtherTxt",
                          "required": false,
                          "enabled": true,
                          "value": "",
                          "_test": "<%/*TODO no object to save field*/%>",
                          "onChange":"<%
                            var position = string:toInt(indexId.value)
                            if(!empty(pageVariables.other) && !empty(pageVariables.other[position])){
                                pageVariables.other.set(position, self.value);
                            }
                            console.info('other list = ' + pageVariables.other);
                          %>"
                        }
                      ]
                    },
                    {
                      "type": "checkBox",
                      "label": "Add this location to my frequent destination list",
                      "id": "addToFrequentTravels",
                      "required": false,
                      "enabled": true,
                      "trueLabel": "True Label",
                      "falseLabel": "False Label",
                      "value": "",
                      "onChange":"<%
                      if(self.value){
                          testTxt.value = pageVariables.mapOfTravelData.find(x => {x.id == 0});

                              testTxt2.value = pageVariables.mapOfTravelData.find(x => {x.id == 0}).id;
                              testTxt2.value = pageVariables.mapOfTravelData;
                      }
                      %>"
                    },
                    {
                      "type": "hidden",
                      "id": "afterLoad",
                      "value": "<%
                                pageVariables.mapOfTravelData.add({
                                    'id': loopIndex,
                                    'sts': '1',
                                    'departureDate': '',
                                    'departureTime': '',
                                    'arrivalDate': '',
                                    'arrivalTime': '',
                                    'modeOfTransport': '',
                                    'departureLocation': '',
                                    'arrivalLocation': ''
                                  }
                                );
                                //console.info('pageVariables.mapOfTravelData after index' + loopIndex + ' = ' + json:asJSON(pageVariables.mapOfTravelData));
                                //mapData(TravelDetails, loopIndex);

                                %>"
                    }
                  ]
                },
                {
                  "type":"fieldSet",
                  "id": "LodgingDetails",
                  "title": "<% 'Lodging/Destination Details - ' + (objectToLoopOn.body.firstName ?? '') + ' ' + (objectToLoopOn.body.lastName ?? '')%>",
                  "collapsible": true,
                  "children": [
                    {
                      "type": "section",
                      "columnWidthRatios": [0.5,0.5],
                      "horizontal": true,
                      "children": [
                        {
                          "type": "date",
                          "label": "Start Date",
                          "id": "lodgingStartDateDt",
                          "required": true,
                          "enabled": true,
                          "value": "<% date:now().format('yyyy-MM-dd') %>",
                          "valueOutBinding": "createDestinations.data[].startDate"
                        },
                        {
                          "type": "date",
                          "label": "End Date",
                          "id": "lodgingEndDateDt",
                          "required": true,
                          "enabled": true,
                          "value": "<% date:now().format('yyyy-MM-dd') %>",
                          "valueOutBinding": "createDestinations.data[].endDate"
                        }
                      ]
                    },
                    {
                      "type": "instanceList",
                      "label": "Lodging/Destination Name",
                      "id": "lodgingIL",
                      "multiSelect": false,
                      "required": true,
                      "enabled": true,
                      "values": "<% !empty(getLodging.data[0])? getLodging.data.add({'id': 'other', 'descriptor': 'Other'}) : [] %>",
                      "onChange": "<%
                        if(empty(self.selectedEntries[0])){
                          lodgingOtherTxt.value = '';
                          //lodgingOtherTxt.setVisible(false);
                          lodgingOtherTxt.setRequired(false);
                        }else if(self.selectedEntries[0].id == 'other'){
                          lodgingOtherTxt.value = '';
                          //lodgingOtherTxt.setVisible(true);
                          lodgingOtherTxt.setRequired(true);
                        }else{
                          lodgingOtherTxt.value = self.selectedEntries[0].descriptor;
                          //lodgingOtherTxt.setVisible(false);
                          lodgingOtherTxt.setRequired(false);
                        }
                      %>"
                    },
                    {
                      "type": "text",
                      "label": "Lodging Name",
                      "id": "lodgingOtherTxt",
                      "required": false,
                      "enabled": false,
                      "visible": true,
                      "valueOutBinding": "createDestinations.data[].name"
                    },
                    {
                      "type": "instanceList",
                      "label": "Country",
                      "id": "countryIl",
                      "multiSelect": false,
                      "required": true,
                      "enabled": true,
                      "visible": true,
                      "searchEndPoint": "<% endpoints.getCountrySearch %>",
                      "searchResultValues": "<% !empty(getCountrySearch.data) ? getCountrySearch.data : [] %>",
                      "values": "<% !empty(getCountrySearch.data) ? getCountrySearch.data : [] %>",
                      "onChange": "<%
                      if(empty(self.selectedEntries[0])){
                        countryText.value = '';
                        countryCodeText.value = '';
                      }else{
                        countryText.value = self.selectedEntries[0].descriptor;
                        countryCodeText.value = self.selectedEntries[0].id;
                      }
                      %>"
                    },
                    {
                      "type":"hidden",
                      "id": "countryText",
                      "value": ""
                    },
                    {
                      "type":"text",
                      "id": "countryCodeText",
                      "label": "Country Code",
                      "enabled": false,
                      "value": "",
                      "valueOutBinding": "createDestinations.data[].countryCode"
                    },
                    {
                      "type": "text",
                      "label": "Address Line 1",
                      "id": "addressLine1Txt",
                      "required": true,
                      "enabled": true,
                      "value": "",
                      "valueOutBinding": "createDestinations.data[].addressLine1"
                    },
                    {
                      "type": "text",
                      "label": "Address Line 2",
                      "id": "addressLine2Txt",
                      "required": false,
                      "enabled": true,
                      "value": "",
                      "valueOutBinding": "createDestinations.data[].addressLine2"
                    },
                    {
                      "type": "text",
                      "label": "Address Line 3",
                      "id": "addressLine3Txt",
                      "required": false,
                      "enabled": true,
                      "value": "",
                      "valueOutBinding": "createDestinations.data[].addressLine3"
                    },
                    {
                      "type": "instanceList",
                      "label": "City",
                      "id": "cityIl",
                      "required": true,
                      "enabled": true,
                      "visible": true,
                      "idKey": "workdayID",
                      "displayKey": "descriptor",
                      "searchEndPoint": "<% endpoints.getCitiesSearch %>",
                      "searchResultValues": "<% !empty(getCitiesSearch.data) ? getCitiesSearch.data : [] %>",
                      "values": "<% !empty(getCitiesSearch.data) ? getCitiesSearch.data : [] %>",
                      "selectedValuesAndDescriptors":"<% [] %>",
                      "onChange": "<% empty(self.selectedEntries[0]) ? cityText.value = '' : cityText.value = self.selectedEntries[0].descriptor %>"
                    },
                    {
                      "type":"hidden",
                      "id": "cityText",
                      "value": "",
                      "valueOutBinding": "createDestinations.data[].city"
                    },
                    {
                      "type": "instanceList",
                      "label": "State/Province/County",
                      "id": "stateIl",
                      "required": "<% false %>",
                      "enabled": true,
                      "values": "<% !empty(getStates.data) ? getStates.data : []  %>",
                      "visible": "<% true %>",
                      "onChange": "<% empty(self.selectedEntries[0]) ? (stateText.value = '') : (stateText.value = self.selectedEntries[0].descriptor) %>"
                    },
                    {
                      "type":"hidden",
                      "id": "stateText",
                      "value": "",
                      "valueOutBinding": "createDestinations.data[].state"
                    },
                    {
                      "type": "text",
                      "label": "Postal Code",
                      "id": "postalCodeTxt",
                      "required": false,
                      "enabled": true,
                      "value": "",
                      "valueOutBinding": "createDestinations.data[].postalCode"
                    },
                    {
                      "type": "text",
                      "label": "Contact Number of Destination",
                      "id": "contactNumberOfDestinationTxt",
                      "required": false,
                      "enabled": true,
                      "value": "",
                      "valueOutBinding": "createDestinations.data[].contactNumber"
                    },
                    {
                      "type": "checkBox",
                      "label": "Add this location to my frequent destination list",
                      "id": "freqDestChbx",
                      "required": false,
                      "enabled": true,
                      "trueLabel": "True Label",
                      "falseLabel": "False Label",
                      "value": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "text",
              "label": "loop",
              "id": "loopTxt",
              "required": true,
              "enabled": false,
              "value": "<% loopId %> "
            }
          ]
        },
        {
          "type": "editButtonBar",
          "editButtons": [
            {
              "type": "editButton",
              "label": "<% 'Next' %>",
              "buttonType": "PRIMARY",
              "sortOrder": "a",
              "id": "nextBtn"
            },
            {
              "type": "editButton",
              "label": "<% 'Save For Later' %>",
              "id": "saveForLaterBtn",
              "sortOrder": "b",
              "buttonType": "AUXILIARY"
            }
          ]
        }
      ]
    }
  }
}